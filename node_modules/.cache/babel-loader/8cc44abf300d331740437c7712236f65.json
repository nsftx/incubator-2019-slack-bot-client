{"remainingRequest":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/babel-loader/lib/index.js!/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vuetify-loader/lib/loader.js!/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/FormSchedule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/FormSchedule.vue","mtime":1565690950783},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.repeat\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport DatePicker from 'vue2-datepicker';\nimport { API_BASE_URL } from \"../constants\";\n/*\nwindow.addEventListener(\"mouseup\", function(event){\n\tif(event.target != document.getElementById(\"formaS\") && event.target.parentNode != document.getElementById(\"formaS\") && \n\tevent.target.parentNode !=  document.getElementById(\"forma\") && event.target.parentNode != document.getElementById(\"inner-wrap\")\n    && event.target != document.getElementById(\"section\") && event.target.parentNode != document.getElementById(\"section\")\n    && event.target != document.getElementById(\"field1\") && event.target != document.getElementById(\"field2\") \n    && event.target != document.getElementsByClassName(\"la\")[0] && event.target != document.getElementsByClassName(\"la\")[1]\n    && event.target != document.getElementById(\"check\") && event.target != document.getElementById(\"active\")\n    && event.target != document.getElementById(\"section-text\")\n    && event.target != document.getElementsByClassName(\"check-label\")[0] && event.target != document.getElementsByClassName(\"check-label\")[1])\n\t{\n\t\tdocument.getElementById(\"formaS\").style.display = \"none\";\n\t\tdocument.getElementById(\"field1\").value = \"\";\n\t\tdocument.getElementById(\"textarea\").value = \"\";\n\t}\n})*/\n\nexport default {\n  name: \"formaS\",\n  components: {\n    DatePicker: DatePicker\n  },\n  data: function data() {\n    return {\n      messagesData: [],\n      channelsData: [],\n      messageTitle: \"Some message title\",\n      channelName: \"Some channel name\",\n      targetMess: \"\",\n      messId: \"\",\n      showTitleError: false,\n      showDateError: false,\n      showChannelError: false,\n      repeat: false,\n      active: false,\n      date: null,\n      formType: \"Create\",\n      showMessageOption: true,\n      time1: '',\n      time2: '',\n      time3: '',\n      // custom lang\n      lang: {\n        days: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        pickers: ['next 7 days', 'next 30 days', 'previous 7 days', 'previous 30 days'],\n        placeholder: {\n          date: 'Select Date',\n          dateRange: 'Select Date Range'\n        }\n      }\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var _res, currentR, path, _res2, res, resM, _res3;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.$route.params.id == null)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get(API_BASE_URL + \"/api/messages\");\n\n            case 4:\n              _res = _context.sent;\n              this.messagesData = _res.data.content;\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              this.$emit(\"show-notification\", -1);\n\n            case 11:\n              _context.next = 56;\n              break;\n\n            case 13:\n              currentR = this.$router.currentRoute.fullPath;\n              path = currentR.substring(0, 31);\n\n              if (!(path == \"/dashboard/messages/newSchedule\")) {\n                _context.next = 30;\n                break;\n              }\n\n              _context.prev = 16;\n              _context.next = 19;\n              return axios.get(API_BASE_URL + \"/api/messages/\" + this.$route.params.id);\n\n            case 19:\n              _res2 = _context.sent;\n              this.messagesData = _res2.data;\n              this.messageTitle = this.messagesData.title;\n              this.showMessageOption = false;\n              _context.next = 28;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t1 = _context[\"catch\"](16);\n              this.$emit(\"show-notification\", -1);\n\n            case 28:\n              _context.next = 56;\n              break;\n\n            case 30:\n              this.formType = \"Update\";\n              _context.prev = 31;\n              _context.next = 34;\n              return axios.get(API_BASE_URL + \"/api/schedules/\" + this.$route.params.id);\n\n            case 34:\n              res = _context.sent;\n              this.active = res.data.active;\n              this.repeat = res.data.repeat;\n              this.channelName = res.data.channel;\n              this.messageTitle = res.data.message.title;\n              this.date = res.data.runAt;\n              this.messId = res.data.message.messageId;\n              _context.next = 46;\n              break;\n\n            case 43:\n              _context.prev = 43;\n              _context.t2 = _context[\"catch\"](31);\n              this.$emit(\"show-notification\", -1);\n\n            case 46:\n              _context.prev = 46;\n              _context.next = 49;\n              return axios.get(API_BASE_URL + \"/api/messages\");\n\n            case 49:\n              resM = _context.sent;\n              this.messagesData = resM.data.content;\n              _context.next = 56;\n              break;\n\n            case 53:\n              _context.prev = 53;\n              _context.t3 = _context[\"catch\"](46);\n              this.$emit(\"show-notification\", -1);\n\n            case 56:\n              _context.prev = 56;\n              _context.next = 59;\n              return axios.get(API_BASE_URL + \"/api/channels\");\n\n            case 59:\n              _res3 = _context.sent;\n              this.channelsData = [{\n                name: \"#general\"\n              }, {\n                name: \"#incubator\"\n              }];\n              _context.next = 66;\n              break;\n\n            case 63:\n              _context.prev = 63;\n              _context.t4 = _context[\"catch\"](56);\n              this.$emit(\"show-notification\", -1);\n\n            case 66:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 8], [16, 25], [31, 43], [46, 53], [56, 63]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  watch: {\n    messageTitle: function messageTitle(value) {\n      this.messageTitle = value;\n      if (this.liveValidation == true) this.check_messageTitle(value);\n    },\n    date: function date(value) {\n      this.date = value;\n      if (this.liveValidation == true) this.check_date(value);\n    },\n    channelName: function channelName(value) {\n      this.channelName = value;\n      if (this.liveValidation == true) this.check_channelName(value);\n    }\n  },\n  methods: {\n    exit: function exit() {\n      this.$router.go(-1);\n    },\n    check_messageTitle: function check_messageTitle(value) {\n      if (this.messageTitle == \"Some message title\") {\n        this.showTitleError = true;\n        return false;\n      } else {\n        this.showTitleError = false;\n        return true;\n      }\n    },\n    check_channelName: function check_channelName(value) {\n      if (this.channelName == \"Some channel name\") {\n        this.showChannelError = true;\n        return false;\n      } else {\n        this.showChannelError = false;\n        return true;\n      }\n    },\n    check_date: function check_date(value) {\n      if (this.date == null) {\n        var inputi = document.getElementsByClassName(\"mx-input\")[0];\n        inputi.style.borderColor = \"red\";\n        this.showDateError = true;\n        return false;\n      }\n\n      var today = new Date();\n\n      if (today > this.date) {\n        var inputi = document.getElementsByClassName(\"mx-input\")[0];\n        inputi.style.borderColor = \"rgba(0, 0, 0, 0.2);\";\n        this.showDateError = true;\n        return false;\n      } else {\n        var inputi = document.getElementsByClassName(\"mx-input\")[0];\n        inputi.style.borderColor = \"rgba(0, 0, 0, 0.2);\";\n        this.showDateError = false;\n        return true;\n      }\n    },\n    save: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var cr, path;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.liveValidation = true;\n                if (this.check_messageTitle(this.messageTitle) == false) this.invalid = true;\n                if (this.check_date(this.date) == false) this.invalid = true;\n                if (this.check_channelName(this.channelName) == false) this.invalid = true;\n\n                if (!(this.invalid == true)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                this.invalid = false;\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                if (!(this.$route.params.id != null)) {\n                  _context2.next = 33;\n                  break;\n                }\n\n                cr = this.$router.currentRoute.fullPath;\n                path = cr.substring(0, 31);\n\n                if (!(path == \"/dashboard/messages/newSchedule\")) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                _context2.prev = 11;\n                _context2.next = 14;\n                return axios.post(API_BASE_URL + \"/api/schedules\", {\n                  active: this.active,\n                  channel: this.channelName,\n                  repeat: this.repeat,\n                  messageId: this.$route.params.id,\n                  runAt: this.date\n                });\n\n              case 14:\n                this.$emit(\"show-notification\");\n                _context2.next = 20;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](11);\n                this.$emit(\"show-notification\", -1);\n\n              case 20:\n                _context2.next = 31;\n                break;\n\n              case 22:\n                _context2.prev = 22;\n                _context2.next = 25;\n                return axios.put(API_BASE_URL + \"/api/schedules/\" + this.$route.params.id, {\n                  active: this.active,\n                  channel: this.channelName,\n                  messageId: this.messId,\n                  repeat: this.repeat,\n                  runAt: this.date\n                });\n\n              case 25:\n                this.$emit(\"show-notification\");\n                _context2.next = 31;\n                break;\n\n              case 28:\n                _context2.prev = 28;\n                _context2.t1 = _context2[\"catch\"](22);\n                this.$emit(\"show-notification\", -1);\n\n              case 31:\n                _context2.next = 42;\n                break;\n\n              case 33:\n                _context2.prev = 33;\n                _context2.next = 36;\n                return axios.post(API_BASE_URL + \"/api/schedules\", {\n                  active: this.active,\n                  channel: this.channelName,\n                  messageId: this.messId,\n                  repeat: this.repeat,\n                  runAt: this.date\n                });\n\n              case 36:\n                this.$emit(\"show-notification\");\n                _context2.next = 42;\n                break;\n\n              case 39:\n                _context2.prev = 39;\n                _context2.t2 = _context2[\"catch\"](33);\n                this.$emit(\"show-notification\", -1);\n\n              case 42:\n                this.$emit(\"reload-schedules\");\n                this.$router.go(-1);\n\n              case 44:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[11, 17], [22, 28], [33, 39]]);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }(),\n    getMessageID: function getMessageID() {\n      var _this = this;\n\n      if (this.messagesData.length > 1) {\n        this.targetMess = this.messagesData.filter(function (mess) {\n          return mess.title == _this.messageTitle;\n        });\n        this.messId = this.targetMess[0].messageId;\n      }\n    }\n  }\n};",{"version":3,"sources":["FormSchedule.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n<div id=\"formaS\">\n\n    <div class=\"form-style-10\">\n<form id=\"forma\">\n    <div class=\"section\">  <p id=\"section-text\">{{ formType }} Schedule <label id=\"close-icon\" @click=\"exit\">x </label> </p></div>\n    <div class=\"inner-wrap\">\n        \n        <label class=\"la\">Message</label>\n        \n        <select name=\"field1\" id=\"field1\" v-model=\"messageTitle\" @click=\"getMessageID\" :class=\"{errorBorder: showTitleError, noErrorBorder: !showTitleError}\"> \n            <option disabled selected>{{ messageTitle }}</option>\n            <option v-for=\"message in messagesData\" :key=\"message.messageId\" v-show=\"showMessageOption\"> {{ message.title }} </option>\n        </select>\n\n        <span v-show=\"showTitleError\">Message title is required</span>\n        <br>\n\n        <label class=\"la\"> Run At </label>  <br> \n        <div class=\"input-append date form_datetime\">\n            <div>\n           <date-picker v-model=\"date\" :lang=\"lang\" style=\"margin-top: 8px\"></date-picker>\n            </div>\n        </div>\n        <br>\n        <br>\n        <span v-show=\"showDateError\">Date is required and must not be less then today date</span>\n        <br>\n\n        <label class=\"la\"> Channel name </label> \n        <select id=\"field3\" v-model=\"channelName\" :class=\"{errorBorder: showChannelError, noErrorBorder: !showChannelError}\"> \n            <option disabled selected >Some channel name</option>\n            <option v-for=\"channel in channelsData\" :key=\"channel.name\"> {{ channel.name }} </option>\n        </select>\n\n        <span v-show=\"showChannelError\"> Channel name is required </span>\n\n        <br>\n        <input type=\"checkbox\" id=\"check\" class=\"checkBox\" v-model=\"repeat\"/> <label class=\"check-label checkBox\" for=\"check\"> Repeat </label> \n        <br> \n        <br>\n        <input type=\"checkbox\" id=\"active\" class=\"checkBox\" v-model=\"active\"/> <label class=\"check-label checkBox\" for=\"active\"> Active </label> \n        <br>\n        <input type=\"button\" class=\"bottomOption\" value=\"Save\" id=\"submit\" @click=\"save\"/>\n        <input type=\"button\" class=\"bottomOption\" id=\"cancel\" value=\"Cancel\" @click=\"exit\"/>\n</div>\n\n</form>\n</div>\n    \n</div>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport DatePicker from 'vue2-datepicker'\nimport { API_BASE_URL } from '../constants';\n\n\n/*\nwindow.addEventListener(\"mouseup\", function(event){\n\tif(event.target != document.getElementById(\"formaS\") && event.target.parentNode != document.getElementById(\"formaS\") && \n\tevent.target.parentNode !=  document.getElementById(\"forma\") && event.target.parentNode != document.getElementById(\"inner-wrap\")\n    && event.target != document.getElementById(\"section\") && event.target.parentNode != document.getElementById(\"section\")\n    && event.target != document.getElementById(\"field1\") && event.target != document.getElementById(\"field2\") \n    && event.target != document.getElementsByClassName(\"la\")[0] && event.target != document.getElementsByClassName(\"la\")[1]\n    && event.target != document.getElementById(\"check\") && event.target != document.getElementById(\"active\")\n    && event.target != document.getElementById(\"section-text\")\n    && event.target != document.getElementsByClassName(\"check-label\")[0] && event.target != document.getElementsByClassName(\"check-label\")[1])\n\t{\n\t\tdocument.getElementById(\"formaS\").style.display = \"none\";\n\t\tdocument.getElementById(\"field1\").value = \"\";\n\t\tdocument.getElementById(\"textarea\").value = \"\";\n\t}\n})*/\n\nexport default {\n    name: \"formaS\",\n    components:{DatePicker},\n     data (){  \n        return {\n            messagesData: [],\n            channelsData: [],\n            messageTitle: \"Some message title\",\n            channelName: \"Some channel name\",\n            targetMess: \"\",\n            messId: \"\",\n            showTitleError: false,\n            showDateError: false,\n            showChannelError: false,\n            repeat: false,\n            active: false,\n            date: null,\n            formType: \"Create\",\n            showMessageOption: true,\n\n            time1: '',\n            time2: '',\n            time3: '',\n            // custom lang\n            lang: {\n                days: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n                months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                pickers: ['next 7 days', 'next 30 days', 'previous 7 days', 'previous 30 days'],\n                placeholder: {\n                date: 'Select Date',\n                dateRange: 'Select Date Range'\n            }\n        }\n        }\n    },\n\n    mounted: async function(){\n        if(this.$route.params.id == null)\n        {\n            try \n            {\n                const res = await axios.get(API_BASE_URL+\"/api/messages\");\n                    this.messagesData = res.data.content;             \n            }\n            catch (err) {\n                this.$emit(\"show-notification\", -1);\n            }\n        }\n        else\n        {\n            var currentR = this.$router.currentRoute.fullPath;\n            var path = currentR.substring(0, 31);\n\n            if(path == \"/dashboard/messages/newSchedule\")\n            {\n                try\n                {\n                    const res = await axios.get(API_BASE_URL+\"/api/messages/\" + this.$route.params.id);\n                    this.messagesData = res.data;\n                    this.messageTitle = this.messagesData.title;\n                    this.showMessageOption = false;\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);\n                }   \n            }\n            else\n            {\n                this.formType = \"Update\";\n                var res;\n                try\n                {\n                    res = await axios.get(API_BASE_URL+\"/api/schedules/\" + this.$route.params.id);\n                    this.active = res.data.active;\n                    this.repeat = res.data.repeat;\n                    this.channelName = res.data.channel;\n                    this.messageTitle = res.data.message.title;\n                    this.date = res.data.runAt;\n                    this.messId = res.data.message.messageId;\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);               \n                }\n                try\n                {\n                    const resM = await axios.get(API_BASE_URL+\"/api/messages\");\n                    this.messagesData = resM.data.content;\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);               \n                }\n            }\n        }\n        try\n        {\n            //Aplikacija nije povezana sa listom kanala\n            const res = await axios.get(API_BASE_URL+\"/api/channels\");\n            this.channelsData = [{name: \"#general\"}, {name: \"#incubator\"}];\n        }\n        catch(err)\n        {\n            this.$emit(\"show-notification\", -1);\n        }\n    },\n\n    watch: {\n        messageTitle(value) {\n          this.messageTitle = value;\n          if (this.liveValidation == true) this.check_messageTitle(value);\n        },\n\n        date(value){\n            this.date = value;\n            if(this.liveValidation == true) this.check_date(value);\n        },\n\n        channelName(value){\n            this.channelName = value;\n            if (this.liveValidation == true) this.check_channelName(value);\n        }\n    },\n\n    methods:{\n\t\texit(){\n\t\t\tthis.$router.go(-1);\n        },\n\n        check_messageTitle(value) \n        {\n            if (this.messageTitle == \"Some message title\") \n            {\n                this.showTitleError = true;\n                return false;\n            } \n            else\n            {\n                this.showTitleError = false;\n                return true;\n            }\n        },\n\n        check_channelName(value) {\n            if (this.channelName == \"Some channel name\") \n            {\n                this.showChannelError = true;\n                return false;\n            } \n            else {\n                this.showChannelError = false;\n                return true;\n            }\n        },\n\n        check_date(value){\n            if(this.date == null)\n            {\n                var inputi = document.getElementsByClassName(\"mx-input\")[0];\n                inputi.style.borderColor = \"red\";\n                this.showDateError = true;\n                return false;\n            }\n            var today = new Date();\n            if(today>this.date)\n            {\n                var inputi = document.getElementsByClassName(\"mx-input\")[0];\n                inputi.style.borderColor = \"rgba(0, 0, 0, 0.2);\";   \n                this.showDateError = true;\n                return false;\n            }\n            else\n            {\n                var inputi = document.getElementsByClassName(\"mx-input\")[0];\n                inputi.style.borderColor = \"rgba(0, 0, 0, 0.2);\"; \n                this.showDateError = false;\n                return true;\n            }\n        },\n\n\t\tasync save(){\n\n            this.liveValidation = true;\n            if (this.check_messageTitle(this.messageTitle) == false) this.invalid = true;\n            if (this.check_date(this.date) == false) this.invalid = true;\n            if (this.check_channelName(this.channelName) == false) this.invalid = true;\n            if (this.invalid == true) \n            {\n                this.invalid = false;\n                return;\n            }\n\n            if(this.$route.params.id != null)\n            {\n                var cr = this.$router.currentRoute.fullPath;\n                var path = cr.substring(0, 31);\n\n                if(path == \"/dashboard/messages/newSchedule\")\n                {\n                    try\n                    {\n                        await axios.post(API_BASE_URL+\"/api/schedules\", {active: this.active, channel: this.channelName, repeat: this.repeat, messageId: this.$route.params.id, runAt: this.date})\n                        this.$emit(\"show-notification\");\n                    }\n                    catch(err)\n                    {\n                        this.$emit(\"show-notification\", -1);\n                    }\n                }\n                else\n                {\n                    try\n                    {\n                        await axios.put(API_BASE_URL+\"/api/schedules/\" + this.$route.params.id, {active: this.active, channel: this.channelName, messageId:     this.messId, repeat: this.repeat, runAt: this.date});\n                        this.$emit(\"show-notification\");\n                    }\n                    catch(err)\n                    {\n                        this.$emit(\"show-notification\", -1);\n                    }\n                }\n            }\n            else\n            {\n                try\n                {\n                    await axios.post(API_BASE_URL+\"/api/schedules\", {active: this.active, channel: this.channelName, messageId: this.messId, repeat: this.repeat, runAt: this.date})\n                    this.$emit(\"show-notification\")\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);\n                }\n            }\n            this.$emit(\"reload-schedules\");\n            this.$router.go(-1);\n        },\n        getMessageID()\n        {   \n            if(this.messagesData.length > 1)\n            {\n                this.targetMess = this.messagesData.filter( mess => mess.title == this.messageTitle);\n                this.messId = this.targetMess[0].messageId;\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n*{\n    font-family: 'Roboto', sans-serif;\n}\n\n*[data-v-f2ae3234] {\n    width: 100%;\n    height:13px;\n    font-family: 'Roboto', sans-serif;\n}\n#check{\n    margin-top:15px;\n}\n\n#check,#active{\n    width:10%;\n}\n\n#cancel,#submit{\n    width:30%;\n    height:auto;\n}\n\n.mx-input{\n    overflow: visible;\n}\n\n.mx-input-append{\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 30px;\n    margin-right: 10px;\n}\n\n#formaS{\n    width: 640px;\n    height: 480px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    z-index: 99;\n}\n\n.form-style-10{\n    width: 100%;\n    height: 100%;\n\tpadding:20px;\n\tposition:absolute;\n\ttop:50%;\n\tleft:50%;\n\ttransform:translateX(-50%) translateY(-50%);\n\tbackground: #FFF;\n    box-sizing:border-box;\n    display:block;\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    z-index: 99;\n}\n\n.form-style-10 .inner-wrap{\n    display:block;\n\tpadding: 20px;\n\tbackground: #fff;\n\tborder-radius: 6px;\n\tmargin-bottom: 15px;\n    margin-top: 20px;\n}\n\n.form-style-10 label{\n\tfont: 13px Arial, Helvetica, sans-serif;\n\tcolor: #888;\n\tmargin-bottom: 10px;\n}\n\n.form-style-10 select{\n    color:#222222;\n    font: 13px Arial, Helvetica, sans-serif;\n    font-weight: 400;\n}\n\n.form-style-10 input[type=\"text\"],\n.form-style-10 select,\n.form-style-10 input[type=\"datetime\"],\n.form-style-10 input[type=\"email\"],\n.form-style-10 input[type=\"number\"],\n.form-style-10 input[type=\"search\"],\n.form-style-10 input[type=\"time\"],\n.form-style-10 input[type=\"url\"],\n.form-style-10 input[type=\"password\"],\n.form-style-10 textarea,\n.form-style-10 select {\n    overflow:none;\n    margin-bottom: 20px;\n\tdisplay: block;\n\tbox-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\t-moz-box-sizing: border-box;\n    width: 100%;\n    height:40%;\n\tpadding: 8px;\n\tborder-radius: 6px;\n\t-webkit-border-radius:6px;\n\t-moz-border-radius:6px;\n}\n\n.form-style-10 .section{\n\tfont: normal 25px 'Bitter', serif;\n    padding-left: 20px;\n\tpadding-bottom: 5px;\n}\n\n.form-style-10 .section p{\n    height:20%;\n    width:100%;\n    font-weight: bold;\n    color:black;\n    margin-top: 18px;\n}\n\n.form-style-10 #submit{\n    float:right;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n    width:20%;\n    overflow: hidden;\n    background: #0080ff;\n\tpadding: 8px 20px 8px 20px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor: #fff;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\tborder: 1px solid #0080ff;;\n\tfont-size: 17px;\n}\n\n.form-style-10 #submit:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 input[type=\"button\"]{\n    margin-right:15px;\n    float:right;\n    padding: 8px 8px 8px 8px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor:#4D4D4D;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tborder: 1px solid #257C9E;\n\tfont-size: 17px;\n    border:none;\n    background:#fff;\n    text-align:center;\n    margin-right: 25px;\n}\n\n.form-style-10 input[type=\"submit\"]:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 .privacy-policy{\n\tfloat: right;\n\twidth: 250px;\n\tfont: 12px Arial, Helvetica, sans-serif;\n\tcolor: #4D4D4D;\n\tmargin-top: 10px;\n\ttext-align: right;\n}\n\n#textarea{\n    display:block;\n    overflow:none;\n    height:100%;\n    width:100%;\n    margin-bottom: 20px;\n}\n\n#close-icon{\n    font-size: 25px;\n    display:inline;\n    text-align:right;\n    position: relative;\n    left: 60%;\n}\n\n#close-icon:hover{\n    cursor: pointer;\n}\n\n#active{\n    margin-bottom: 50px;\n}\n\n#field1, #field2, #field3{\n    margin-bottom: 10px;\n    height: 37px;\n    margin-top: 10px;\n    font-size: 15px;\n}\n\n.checkBox{\n    position: relative;\n    top: 10px;\n    right: 15px;\n}\n\n.bottomOption{\n    position: relative;\n    bottom: 45px;\n}\n\n.errorBorder {\n    border: 1px inset rgb(253, 38, 38);\n}\n\n.noErrorBorder{\n    border: 1px inset rgba(0, 0, 0, 0.2);\n}\n\nspan {\n  color: rgb(253, 38, 38);\n  font-weight: 400;\n}\n\n.checkBox:hover{\n    cursor: pointer;\n}\n\n.la{\n    display: inline;\n    background-color: white;\n    position: relative;\n    top: 15px;\n    left: 10px;\n    z-index: 99;\n    padding: 0px 5px;\n}\n\n</style>"],"sourceRoot":"src/components"}]}