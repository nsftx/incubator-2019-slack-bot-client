{"remainingRequest":"/home/newsmay/Desktop/NewFolder/novi/node_modules/babel-loader/lib/index.js!/home/newsmay/Desktop/NewFolder/novi/node_modules/vuetify-loader/lib/loader.js!/home/newsmay/Desktop/NewFolder/novi/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/NewFolder/novi/src/components/FormTrigger.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/newsmay/Desktop/NewFolder/novi/src/components/FormTrigger.vue","mtime":1566221919000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/cache-loader/dist/cjs.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/babel-loader/lib/index.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vuetify-loader/lib/loader.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/cache-loader/dist/cjs.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/index.js","mtime":1565775065000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/newsmay/Desktop/NewFolder/novi/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"../constants\";\nexport default {\n  name: \"formaT\",\n  data: function data() {\n    return {\n      messagesData: [],\n      channelsData: [],\n      targetMess: \"\",\n      messageTitle: \"Some message title\",\n      triggerType: \"Some trigger type\",\n      channelName: \"Some channel name\",\n      active: false,\n      formType: \"Create\",\n      messId: \"\",\n      liveValidation: false,\n      showTitleError: false,\n      showTriggerError: false,\n      showChannelError: false,\n      showMessageOption: true\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var currentR, path, _res, res, resM, _res2, _res3;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.$route.params.id != null)) {\n                _context.next = 45;\n                break;\n              }\n\n              currentR = this.$router.currentRoute.fullPath;\n              path = currentR.substring(0, 30);\n\n              if (!(path == \"/dashboard/messages/newTrigger\")) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.get(API_BASE_URL + \"/api/messages/\" + this.$route.params.id);\n\n            case 7:\n              _res = _context.sent;\n              this.messagesData = _res.data;\n              this.messageTitle = this.messagesData.title;\n              this.showMessageOption = false;\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](4);\n              this.$emit(\"show-notification\", -1);\n\n            case 16:\n              _context.next = 43;\n              break;\n\n            case 18:\n              this.formType = \"Update\";\n              _context.prev = 19;\n              _context.next = 22;\n              return axios.get(API_BASE_URL + \"/api/triggers/\" + this.$route.params.id);\n\n            case 22:\n              res = _context.sent;\n              this.messageTitle = res.data.message.title;\n              this.channelName = res.data.channel;\n              this.active = res.data.active;\n              this.triggerType = res.data.triggerType;\n              this.messId = res.data.message.messageId;\n              _context.next = 33;\n              break;\n\n            case 30:\n              _context.prev = 30;\n              _context.t1 = _context[\"catch\"](19);\n              this.$emit(\"show-notification\", -1);\n\n            case 33:\n              _context.prev = 33;\n              _context.next = 36;\n              return axios.get(API_BASE_URL + \"/api/messages\");\n\n            case 36:\n              resM = _context.sent;\n              this.messagesData = resM.data.content;\n              _context.next = 43;\n              break;\n\n            case 40:\n              _context.prev = 40;\n              _context.t2 = _context[\"catch\"](33);\n              this.$emit(\"show-notification\", -1);\n\n            case 43:\n              _context.next = 55;\n              break;\n\n            case 45:\n              _context.prev = 45;\n              _context.next = 48;\n              return axios.get(API_BASE_URL + \"/api/messages\");\n\n            case 48:\n              _res2 = _context.sent;\n              this.messagesData = _res2.data.content;\n              _context.next = 55;\n              break;\n\n            case 52:\n              _context.prev = 52;\n              _context.t3 = _context[\"catch\"](45);\n              this.$emit(\"show-notification\", -1);\n\n            case 55:\n              _context.prev = 55;\n              _context.next = 58;\n              return axios.get(API_BASE_URL + \"/api/channels\");\n\n            case 58:\n              _res3 = _context.sent;\n              this.channelsData = [{\n                name: \"#general\"\n              }, {\n                name: \"#incubator\"\n              }];\n              _context.next = 65;\n              break;\n\n            case 62:\n              _context.prev = 62;\n              _context.t4 = _context[\"catch\"](55);\n              this.$emit(\"show-notification\", -1);\n\n            case 65:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[4, 13], [19, 30], [33, 40], [45, 52], [55, 62]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  watch: {\n    messageTitle: function messageTitle(value) {\n      this.messageTitle = value;\n      if (this.liveValidation == true) this.check_messageTitle(value);\n    },\n    triggerType: function triggerType(value) {\n      this.triggerType = value;\n      if (this.liveValidation == true) this.check_triggerType(value);\n    },\n    channelName: function channelName(value) {\n      this.channelName = value;\n      if (this.liveValidation == true) this.check_channelName(value);\n    }\n  },\n  methods: {\n    exit: function exit() {\n      this.$router.go(-1);\n    },\n    check_messageTitle: function check_messageTitle(value) {\n      if (this.messageTitle == \"Some message title\") {\n        this.showTitleError = true;\n        return false;\n      } else {\n        this.showTitleError = false;\n        return true;\n      }\n    },\n    check_triggerType: function check_triggerType(value) {\n      if (this.triggerType == \"Some trigger type\") {\n        this.showTriggerError = true;\n        return false;\n      } else {\n        this.showTriggerError = false;\n        return true;\n      }\n    },\n    check_channelName: function check_channelName(value) {\n      if (this.channelName == \"Some channel name\") {\n        this.showChannelError = true;\n        return false;\n      } else {\n        this.showChannelError = false;\n        return true;\n      }\n    },\n    save: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var cr, path, res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.liveValidation = true;\n                if (this.check_messageTitle(this.messageTitle) == false) this.invalid = true;\n                if (this.check_triggerType(this.triggerType) == false) this.invalid = true;\n                if (this.check_channelName(this.channelName) == false) this.invalid = true;\n\n                if (!(this.invalid == true)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                this.invalid = false;\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                if (!(this.$route.params.id != null)) {\n                  _context2.next = 37;\n                  break;\n                }\n\n                cr = this.$router.currentRoute.fullPath;\n                path = cr.substring(0, 30);\n\n                if (!(path == \"/dashboard/messages/newTrigger\")) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                _context2.prev = 11;\n                _context2.next = 14;\n                return axios.post(API_BASE_URL + \"/api/triggers\", {\n                  channel: this.channelName,\n                  triggerType: this.triggerType,\n                  active: this.active,\n                  messageId: this.$route.params.id\n                });\n\n              case 14:\n                this.$emit(\"show-notification\");\n                _context2.next = 20;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](11);\n                this.$emit(\"show-notification\", -1);\n\n              case 20:\n                _context2.next = 35;\n                break;\n\n              case 22:\n                _context2.prev = 22;\n                _context2.next = 25;\n                return axios.get(API_BASE_URL + \"/api/messages\");\n\n              case 25:\n                res = _context2.sent;\n                this.messagesData = res.data.content;\n                _context2.next = 29;\n                return axios.put(API_BASE_URL + \"/api/triggers/\" + this.$route.params.id, {\n                  channel: this.channelName,\n                  triggerType: this.triggerType,\n                  active: this.active,\n                  messageId: this.messId\n                });\n\n              case 29:\n                this.$emit(\"show-notification\");\n                _context2.next = 35;\n                break;\n\n              case 32:\n                _context2.prev = 32;\n                _context2.t1 = _context2[\"catch\"](22);\n                this.$emit(\"show-notification\", -1);\n\n              case 35:\n                _context2.next = 46;\n                break;\n\n              case 37:\n                _context2.prev = 37;\n                _context2.next = 40;\n                return axios.post(API_BASE_URL + \"/api/triggers\", {\n                  active: this.active,\n                  channel: this.channelName,\n                  messageId: this.messId,\n                  triggerType: this.triggerType\n                });\n\n              case 40:\n                this.$emit(\"show-notification\");\n                _context2.next = 46;\n                break;\n\n              case 43:\n                _context2.prev = 43;\n                _context2.t2 = _context2[\"catch\"](37);\n                this.$emit(\"show-notification\", -1);\n\n              case 46:\n                this.$emit(\"reload-triggers\");\n                this.$router.go(-1);\n\n              case 48:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[11, 17], [22, 32], [37, 43]]);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }(),\n    getMessageID: function getMessageID() {\n      var _this = this;\n\n      if (this.messagesData.length > 1) {\n        this.targetMess = this.messagesData.filter(function (mess) {\n          return mess.title == _this.messageTitle;\n        });\n        this.messId = this.targetMess[0].messageId;\n      }\n    }\n  }\n};",{"version":3,"sources":["FormTrigger.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n  <div id=\"formaT\">\n    <div class=\"form-style-10\">\n      <form id=\"forma\">\n        <div class=\"section\">\n          <p>\n            {{ formType }} Trigger\n            <label id=\"close-icon\" @click=\"exit\">x</label>\n          </p>\n        </div>\n        <div class=\"inner-wrap\">\n          <label class=\"la\">Message</label>\n\n          <select\n            id=\"field1\"\n            class=\"border\"\n            v-model=\"messageTitle\"\n            @click=\"getMessageID\"\n            :class=\"{errorBorder: showTitleError, noErrorBorder: !showTitleError}\"\n          >\n            <option disabled selected>{{ messageTitle }}</option>\n            <option\n              v-for=\"message in messagesData\"\n              :key=\"message.messageId\"\n              v-show=\"showMessageOption\"\n            >{{ message.title }}</option>\n          </select>\n\n          <span v-show=\"showTitleError\">Message title is required</span>\n          <br />\n\n          <label class=\"la\">Trigger</label>\n          <select\n            id=\"field2\"\n            class=\"border\"\n            v-model=\"triggerType\"\n            :class=\"{errorBorder: showTriggerError, noErrorBorder: !showTriggerError}\"\n          >\n            <option disabled selected>Some trigger type</option>\n            <option>On channel join</option>\n          </select>\n\n          <span v-show=\"showTriggerError\">Trigger type is required</span>\n          <br />\n          <br />\n          <label class=\"la\">Channel name</label>\n          <select\n            id=\"field3\"\n            class=\"border\"\n            v-model=\"channelName\"\n            :class=\"{errorBorder: showChannelError, noErrorBorder: !showChannelError}\"\n          >\n            <option disabled selected>Some channel name</option>\n            <option v-for=\"channel in channelsData\" :key=\"channel.name\">{{ channel.name }}</option>\n          </select>\n\n          <span v-show=\"showChannelError\">Channel name is required</span>\n          <br />\n          <br />\n\n          <label class=\"container\">\n            <p class=\"checkText\">Active</p>\n            <input type=\"checkbox\" checked=\"checked\" v-model=\"active\" />\n            <span class=\"checkmark\"></span>\n          </label>\n          <br />\n          <br />\n          <input type=\"button\" value=\"Save\" id=\"submit\" @click=\"save\" />\n          <input type=\"button\" value=\"Cancel\" @click=\"exit\" />\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"../constants\";\n\nexport default {\n  name: \"formaT\",\n  data() {\n    return {\n      messagesData: [],\n      channelsData: [],\n      targetMess: \"\",\n      messageTitle: \"Some message title\",\n      triggerType: \"Some trigger type\",\n      channelName: \"Some channel name\",\n      active: false,\n      formType: \"Create\",\n      messId: \"\",\n      liveValidation: false,\n      showTitleError: false,\n      showTriggerError: false,\n      showChannelError: false,\n      showMessageOption: true\n    };\n  },\n  mounted: async function() {\n    if (this.$route.params.id != null) {\n      var currentR = this.$router.currentRoute.fullPath;\n      var path = currentR.substring(0, 30);\n\n      if (path == \"/dashboard/messages/newTrigger\") {\n        try {\n          const res = await axios.get(\n            API_BASE_URL + \"/api/messages/\" + this.$route.params.id\n          );\n          this.messagesData = res.data;\n          this.messageTitle = this.messagesData.title;\n          this.showMessageOption = false;\n        } catch (err) {\n          this.$emit(\"show-notification\", -1);\n        }\n      } else {\n        this.formType = \"Update\";\n\n        var res;\n        try {\n          res = await axios.get(\n            API_BASE_URL + \"/api/triggers/\" + this.$route.params.id\n          );\n          this.messageTitle = res.data.message.title;\n          this.channelName = res.data.channel;\n          this.active = res.data.active;\n          this.triggerType = res.data.triggerType;\n          this.messId = res.data.message.messageId;\n        } catch (err) {\n          this.$emit(\"show-notification\", -1);\n        }\n        try {\n          const resM = await axios.get(API_BASE_URL + \"/api/messages\");\n          this.messagesData = resM.data.content;\n        } catch (err) {\n          this.$emit(\"show-notification\", -1);\n        }\n      }\n    } else {\n      try {\n        const res = await axios.get(API_BASE_URL + \"/api/messages\");\n        this.messagesData = res.data.content;\n      } catch (err) {\n        this.$emit(\"show-notification\", -1);\n      }\n    }\n    try {\n      //Aplikacija nije povezana sa listom kanala\n      const res = await axios.get(API_BASE_URL + \"/api/channels\");\n      this.channelsData = [{ name: \"#general\" }, { name: \"#incubator\" }];\n    } catch (err) {\n      this.$emit(\"show-notification\", -1);\n    }\n  },\n\n  watch: {\n    messageTitle(value) {\n      this.messageTitle = value;\n      if (this.liveValidation == true) this.check_messageTitle(value);\n    },\n\n    triggerType(value) {\n      this.triggerType = value;\n      if (this.liveValidation == true) this.check_triggerType(value);\n    },\n\n    channelName(value) {\n      this.channelName = value;\n      if (this.liveValidation == true) this.check_channelName(value);\n    }\n  },\n\n  methods: {\n    exit() {\n      this.$router.go(-1);\n    },\n\n    check_messageTitle(value) {\n      if (this.messageTitle == \"Some message title\") {\n        this.showTitleError = true;\n        return false;\n      } else {\n        this.showTitleError = false;\n        return true;\n      }\n    },\n\n    check_triggerType(value) {\n      if (this.triggerType == \"Some trigger type\") {\n        this.showTriggerError = true;\n        return false;\n      } else {\n        this.showTriggerError = false;\n        return true;\n      }\n    },\n\n    check_channelName(value) {\n      if (this.channelName == \"Some channel name\") {\n        this.showChannelError = true;\n        return false;\n      } else {\n        this.showChannelError = false;\n        return true;\n      }\n    },\n\n    async save() {\n      this.liveValidation = true;\n      if (this.check_messageTitle(this.messageTitle) == false)\n        this.invalid = true;\n      if (this.check_triggerType(this.triggerType) == false)\n        this.invalid = true;\n      if (this.check_channelName(this.channelName) == false)\n        this.invalid = true;\n      if (this.invalid == true) {\n        this.invalid = false;\n        return;\n      }\n\n      if (this.$route.params.id != null) {\n        var cr = this.$router.currentRoute.fullPath;\n        var path = cr.substring(0, 30);\n\n        if (path == \"/dashboard/messages/newTrigger\") {\n          try {\n            await axios.post(API_BASE_URL + \"/api/triggers\", {\n              channel: this.channelName,\n              triggerType: this.triggerType,\n              active: this.active,\n              messageId: this.$route.params.id\n            });\n            this.$emit(\"show-notification\");\n          } catch (err) {\n            this.$emit(\"show-notification\", -1);\n          }\n        } else {\n          try {\n            const res = await axios.get(API_BASE_URL + \"/api/messages\");\n            this.messagesData = res.data.content;\n\n            await axios.put(\n              API_BASE_URL + \"/api/triggers/\" + this.$route.params.id,\n              {\n                channel: this.channelName,\n                triggerType: this.triggerType,\n                active: this.active,\n                messageId: this.messId\n              }\n            );\n            this.$emit(\"show-notification\");\n          } catch (err) {\n            this.$emit(\"show-notification\", -1);\n          }\n        }\n      } else {\n        try {\n          await axios.post(API_BASE_URL + \"/api/triggers\", {\n            active: this.active,\n            channel: this.channelName,\n            messageId: this.messId,\n            triggerType: this.triggerType\n          });\n          this.$emit(\"show-notification\");\n        } catch (err) {\n          this.$emit(\"show-notification\", -1);\n        }\n      }\n      this.$emit(\"reload-triggers\");\n      this.$router.go(-1);\n    },\n    getMessageID() {\n      if (this.messagesData.length > 1) {\n        this.targetMess = this.messagesData.filter(\n          mess => mess.title == this.messageTitle\n        );\n        this.messId = this.targetMess[0].messageId;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\n#formaT {\n  width: 640px;\n  height: 480px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  background-color: white;\n  padding: 10px;\n  z-index: 99;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n#form-style-10 {\n  width: 40%;\n  height: auto;\n  padding: 20px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  background: #fff;\n  overflow: hidden;\n  box-sizing: border-box;\n  display: block;\n  z-index: 99;\n}\n.form-style-10 .inner-wrap {\n  height: auto;\n  display: block;\n  padding: 0 20px 20px 20px;\n  background: #fff;\n  border-radius: 6px;\n  margin-bottom: 15px;\n}\n\n.form-style-10 label {\n  font: 13px Arial, Helvetica, sans-serif;\n  color: #888;\n  margin-bottom: 15px;\n}\n.form-style-10 select {\n  color: #222222;\n  font: 13px Arial, Helvetica, sans-serif;\n  font-weight: 400;\n}\n.form-style-10 input[type=\"text\"],\n.form-style-10 select,\n.form-style-10 input[type=\"datetime\"],\n.form-style-10 input[type=\"email\"],\n.form-style-10 input[type=\"number\"],\n.form-style-10 input[type=\"search\"],\n.form-style-10 input[type=\"time\"],\n.form-style-10 input[type=\"url\"],\n.form-style-10 input[type=\"password\"],\n.form-style-10 textarea,\n.form-style-10 select {\n  padding-top: 10px;\n  overflow: none;\n  margin-bottom: 15px;\n  display: block;\n  box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  width: 100%;\n  height: 40%;\n  padding: 8px;\n  border-radius: 6px;\n  -webkit-border-radius: 6px;\n  -moz-border-radius: 6px;\n  font-size: 15px;\n}\n\n.form-style-10 .section {\n  font: normal 23px \"Bitter\", serif;\n  padding-left: 20px;\n}\n\n.form-style-10 .section p {\n  height: 20%;\n  width: 100%;\n  font-weight: bold;\n  color: black;\n  margin-top: 18px;\n  margin-bottom: 25px;\n}\n\n.form-style-10 #submit {\n  float: right;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  width: 20%;\n  height: 30%;\n  overflow: hidden;\n  background: #0080ff;\n  padding: 8px 20px 8px 20px;\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  color: #fff;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n  font: normal 30px \"Bitter\", serif;\n  border: 1px solid #0080ff;\n  font-size: 15px;\n}\n\n.form-style-10 #submit:hover {\n  background: darkblue;\n  -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n  -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n  box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 input[type=\"button\"] {\n  margin-right: 35px;\n  float: right;\n  padding: 8px 8px 8px 8px;\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  color: #4d4d4d;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n  font: normal 30px \"Bitter\", serif;\n  -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  border: 1px solid #257c9e;\n  font-size: 15px;\n  border: none;\n  background: #fff;\n  text-align: center;\n}\n\n.form-style-10 input[type=\"submit\"]:hover {\n  background: darkblue;\n  -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n  -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n  box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 .privacy-policy {\n  float: right;\n  width: 250px;\n  font: 12px Arial, Helvetica, sans-serif;\n  color: #4d4d4d;\n  margin-top: 10px;\n  text-align: right;\n}\n\n#textarea {\n  display: block;\n  overflow: none;\n  height: 100%;\n  width: 100%;\n  margin-bottom: 20px;\n}\n\n#close-icon {\n  font-size: 25px;\n  display: inline;\n  text-align: right;\n  float: right;\n  margin: 0 20px 10px 0px;\n}\n\n#close-icon:hover {\n  cursor: pointer;\n}\n\n.la {\n  position: relative;\n  top: 7px;\n  left: 10px;\n  text-align: center;\n  padding: 0px 7px;\n  background-color: white;\n}\n\nspan {\n  color: rgb(253, 38, 38);\n  font-weight: 400;\n}\n\n.errorBorder {\n  border: 1px inset rgb(253, 38, 38);\n}\n\n.noErrorBorder {\n  border: 1px inset rgba(0, 0, 0, 0.2);\n}\n\n.checkText {\n  position: relative;\n  left: 45px;\n  bottom: 5px;\n}\n\n.container {\n  display: block;\n  position: relative;\n  padding-left: 35px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n\n  -webkit-box-flex: 1;\n  -ms-flex: 1 1 100%;\n  flex: 1 1 100%;\n  padding: 0px;\n  width: 100%;\n}\n\n/* Hide the browser's default checkbox */\n.container input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n\n/* Create a custom checkbox */\n.checkmark {\n  position: absolute;\n  top: -5px;\n  left: 8px;\n  height: 15px;\n  width: 15px;\n  background-color: white;\n  border: 2px solid grey;\n}\n\n/* On mouse-over, add a grey background color */\n.container:hover input ~ .checkmark {\n  background-color: rgb(235, 228, 228);\n}\n\n/* When the checkbox is checked, add a blue background */\n.container input:checked ~ .checkmark {\n  background-color: #2196f3;\n  border-color: #2196f3;\n}\n\n/* Create the checkmark/indicator (hidden when not checked) */\n.checkmark:after {\n  content: \"\";\n  margin-left: 3px;\n  display: none;\n  text-align: center;\n}\n\n/* Show the checkmark when checked */\n.container input:checked ~ .checkmark:after {\n  display: block;\n}\n\n/* Style the checkmark/indicator */\n.container .checkmark:after {\n  left: 9px;\n  top: 5px;\n  width: 5px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 3px 3px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n</style>"],"sourceRoot":"src/components"}]}