{"remainingRequest":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/NewFolder/novi/src/components/Users.vue?vue&type=style&index=0&id=040e3608&scoped=true&lang=css&","dependencies":[{"path":"/home/newsmay/Desktop/NewFolder/novi/src/components/Users.vue","mtime":1566383811869},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/css-loader/index.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/postcss-loader/src/index.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vuetify-loader/lib/loader.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/cache-loader/dist/cjs.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/index.js","mtime":1565775065000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh1 {\n  margin-top: 0px;\n  width: 200px;\n  float: left;\n}\n\n#header {\n  margin-left: 15px;\n  margin-right: 10px;\n  display: block;\n  width: 99%;\n  float: right;\n  background-color: white;\n}\n\n#divlist {\n  width: 100%;\n  height: 100vh;\n}\n\n#table {\n  background-color: white;\n}\n\n#user {\n  padding: 20px;\n  background-color: white;\n}\n\nbody {\n  font-family: \"Lato\", sans-serif;\n}\n\n#footer {\n  position: absolute;\n  bottom: -10px;\n  width: calc(93% - 20px);\n  margin-right: 20px;\n}\n\n.column3 {\n  width: 4%;\n  margin-left: 15px;\n}\n",{"version":3,"sources":["Users.vue"],"names":[],"mappingsfile":"Users.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"user\">\n    <router-view></router-view>\n    <div id=\"header\">\n      <h1>Users</h1>\n    </div>\n    <div id=\"divlist\">\n      <ul id=\"list\">\n        <li id=\"title-li\">\n          <div class=\"column1 column\">\n            <h5>Name</h5>\n            <p>\n              <i class=\"material-icons\">arrow_drop_down</i>\n            </p>\n          </div>\n          <div class=\"column2 column\">\n            <h5>Email</h5>\n            <p>\n              <i class=\"material-icons\">arrow_drop_down</i>\n            </p>\n          </div>\n          <div class=\"column3 column\">\n            <h5>ID</h5>\n            <p>\n              <i class=\"material-icons\">arrow_drop_down</i>\n            </p>\n          </div>\n          <div class=\"column4 column\">\n            <p>\n              <i class=\"material-icons\">filter_list</i>\n            </p>\n          </div>\n        </li>\n\n        <li v-for=\"user in usersData\" :key=\"user.id\">\n          <div class=\"linear2\"></div>\n          <div class=\"linear1\"></div>\n          <div class=\"column1 column\">\n            <p>{{user.name}}</p>\n          </div>\n          <div class=\"column2 column\">\n            <p>{{user.email}}</p>\n          </div>\n          <div class=\"column3 column\">\n            <p>{{user.id}}</p>\n          </div>\n          <div class=\"column4 column\">\n            <i class=\"material-icons\">create</i>\n            <i class=\"material-icons\">delete</i>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n    <div id=\"footer\">\n      <button id=\"footer-btn\" @click=\"toggleMenu\">{{ this.rowSize }} Rows</button>\n      <div id=\"menu\" v-show=\"menu\">\n        <div\n          class=\"menu-article\"\n          v-for=\"rowValue in rowSizesValue\"\n          :key=\"rowValue\"\n          @click=\"setRows(rowValue)\"\n        >{{ rowValue }}</div>\n      </div>\n\n      <div class=\"text-xs-center\">\n        <v-pagination v-model=\"page\" :length=\"pagesSize\" :total-visible=\"5\" @input=\"changePage\"></v-pagination>\n      </div>\n    </div>\n\n    <button @click=\"showUserForm\" id=\"btn\">+</button>\n\n    <div\n      id=\"notification\"\n      v-show=\"showNoti\"\n      :class=\"{redBorder: errorOccured, greenBorder: !errorOccured}\"\n    >\n      <input\n        type=\"text\"\n        v-model=\"textNoti\"\n        readonly\n        :class=\"{redText: errorOccured, greenText: !errorOccured}\"\n      />\n      <button\n        @click=\"showNotification\"\n        :class=\"{redBackground: errorOccured, greenBackground: !errorOccured}\"\n      >OK</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { API_BASE_URL, NAME, ROLE, LANGUAGE } from \"../constants/index.js\";\nimport {\n  Current_User_Role,\n  THEME_ID,\n  THEME,\n  USERS\n} from \"../constants/index.js\";\nimport { User_Email } from \"../constants/index.js\";\nimport { ACCESS_TOKEN } from \"../constants/index.js\";\nimport axios from \"axios\";\nimport ClickOutside from \"vue-click-outside\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  Authorization: \"Bearer \" + localStorage.getItem(ACCESS_TOKEN)\n};\n\nexport default {\n  name: \"user\",\n  data() {\n    return {\n      usersData: [],\n      textNoti: \"\",\n      showNoti: false,\n      rowSizesValue: [5, 10, 20],\n      rowSize: 20,\n      page: 1, //current active page\n      pagesSize: 1, //Number of pages\n      menu: false,\n      sortByValue: \"createdAt\",\n      textNoti: \"\",\n      errorOccured: false,\n      showNoti: false\n    };\n  },\n\n  mounted: function() {\n    if (localStorage.getItem(THEME) == \"light\") {\n      document.getElementById(\"header\").style.backgroundColor = \"white\";\n      document.getElementById(\"divlist\").style.backgroundColor = \"white\";\n    } else if (localStorage.getItem(THEME) == \"dark\") {\n      document.getElementById(\"header\").style.backgroundColor = \"black\";\n      document.getElementById(\"divlist\").style.backgroundColor = \"black\";\n      document.getElementById(\"user\").style.backgroundColor = \"black\";\n    }\n    if (localStorage.getItem(LANGUAGE) != \"en\") {\n      document.getElementsByTagName(\"H1\")[0].innerHTML = localStorage.getItem(\n        USERS\n      );\n      document.getElementsByTagName(\"H5\")[0].innerHTML = localStorage.getItem(\n        NAME\n      );\n      document.getElementsByTagName(\"H5\")[2].innerHTML = localStorage.getItem(\n        ROLE\n      );\n    }\n    this.create();\n  },\n  methods: {\n    toggleMenu() {\n      this.menu = !this.menu;\n    },\n\n    hideMenu() {\n      this.menu = false;\n    },\n\n    setRows(value) {\n      if (value != this.rowSize) {\n        this.rowSize = value;\n        //this.reloadTriggers();\n      }\n      this.menu = !this.menu;\n    },\n\n    changePage(nextPage) {\n      this.page = nextPage;\n      //this.reloadTriggers(nextPage - 1);\n    },\n\n\n    showNotification(value) {\n      if (value == -1) {\n        this.textNoti = \"Some error have occured\";\n        this.errorOccured = true;\n      } else {\n        this.errorOccured = false;\n        this.textNoti = \"Succes\";\n      }\n      this.showNoti = !this.showNoti;\n      setTimeout(this.closeNoti, 1500);\n      {\n      }\n    },\n\n    async editUser(id) {\n      this.$router.push(\"/dashboard/messages/updateUser/\" + id);\n    },\n    async deleteUser(id) {\n      await axios.delete(API_BASE_URL + \"/user/delete/\" + id);\n      var pg = this.page - 1;\n      try {\n        var res;\n        if (this.titleSort == true)\n          res = await axios.get(\n            API_BASE_URL +\n              \"/user/getAllUsers?page=\" +\n              pg +\n              \"&size=\" +\n              this.rowSize +\n              \"&sort=title,\" +\n              this.sortType\n          );\n        else if (this.textSort == true)\n          res = await axios.get(\n            API_BASE_URL +\n              \"/user/getAllUsers?page=\" +\n              pg +\n              \"&size=\" +\n              this.rowSize +\n              \"&sort=text,\" +\n              this.sortType\n          );\n        else\n          res = await axios.get(\n            API_BASE_URL +\n              \"/user/getAllUsers?page=\" +\n              pg +\n              \"&size=\" +\n              this.rowSize +\n              \"&sort=createdAt,\" +\n              this.sortType\n          );\n\n        if (res.data.numberOfElements == 0) {\n          if (this.page != 1) this.changePage(this.page - 1);\n        }\n        this.usersData = res.data.content;\n        if (res.data.totalPages == 0) this.pagesSize = 1;\n        else this.pagesSize = res.data.totalPages;\n        this.showNotification(200);\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n    async reloadUsers() {\n      var pg = this.page - 1;\n      try {\n        const res = await axios.get(\n          API_BASE_URL +\n            \"/api/messages?page=\" +\n            pg +\n            \"&size=\" +\n            this.rowSize +\n            \"&sort=\" +\n            this.sortByValue +\n            \",\" +\n            this.sortType\n        );\n\n        if (res.data.totalPages < this.page)\n          this.changePage(res.data.totalPages);\n\n        this.messagesData = res.data.content;\n        this.pagesSize = res.data.totalPages;\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n    showUserForm() {\n      this.$router.push(\"/dashboard/user/newUser\");\n    },\n    async reloadMessages() {\n      var pg = this.page - 1;\n      try {\n        const res = await axios.get(\n          API_BASE_URL +\n            \"/user/getAllUsers?page=\" +\n            pg +\n            \"&size=\" +\n            this.rowSize +\n            \"&sort=\" +\n            this.sortByValue +\n            \",\" +\n            this.sortType\n        );\n\n        if (res.data.totalPages < this.page)\n          this.changePage(res.data.totalPages);\n\n        this.usersData = res.data.content;\n        this.pagesSize = res.data.totalPages;\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n    async create() {\n      try {\n        const res = await axios.get(\n          API_BASE_URL +\n            \"/user/getAllUsers?page=0&size=\" +\n            this.rowSize +\n            \"&sort=name,\" +\n            this.sortType\n        );\n        this.usersData = res.data.content;\n        if (res.data.totalPages == 0) this.pagesSize = 1;\n        else this.pagesSize = res.data.totalPages;\n        this.rowSize = res.data.size;\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n    sortBy(value) {\n      if (this.sortType == \"desc\") this.sortType = \"asc\";\n      else this.sortType = \"desc\";\n\n      this.sortByValue = value;\n      this.reloadMessages();\n    }\n  },\n  directives: {\n    ClickOutside\n  }\n};\n</script>\n\n<style scoped>\nh1 {\n  margin-top: 0px;\n  width: 200px;\n  float: left;\n}\n\n#header {\n  margin-left: 15px;\n  margin-right: 10px;\n  display: block;\n  width: 99%;\n  float: right;\n  background-color: white;\n}\n\n#divlist {\n  width: 100%;\n  height: 100vh;\n}\n\n#table {\n  background-color: white;\n}\n\n#user {\n  padding: 20px;\n  background-color: white;\n}\n\nbody {\n  font-family: \"Lato\", sans-serif;\n}\n\n#footer {\n  position: absolute;\n  bottom: -10px;\n  width: calc(93% - 20px);\n  margin-right: 20px;\n}\n\n.column3 {\n  width: 4%;\n  margin-left: 15px;\n}\n</style>"]}]}