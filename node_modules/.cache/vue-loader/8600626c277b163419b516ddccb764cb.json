{"remainingRequest":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/NewFolder/novi/src/components/Schedules.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/newsmay/Desktop/NewFolder/novi/src/components/Schedules.vue","mtime":1566287946528},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/cache-loader/dist/cjs.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/babel-loader/lib/index.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vuetify-loader/lib/loader.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/cache-loader/dist/cjs.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/index.js","mtime":1565775065000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  API_BASE_URL,\n  SCHEDULES,\n  MESSAGE,\n  NEXTRUN,\n  ACTIVEAT,\n  REPEAT,\n  CHANNEL\n} from \"../constants/index.js\";\nimport { CURRENT_USER_ROLE, THEME } from \"../constants/index.js\";\nimport { ACCESS_TOKEN, LANGUAGE } from \"../constants/index.js\";\nimport axios from \"axios\";\nimport ClickOutside from \"vue-click-outside\";\n\nexport default {\n  name: \"schedules\",\n\n  data() {\n    return {\n      schedulesData: [],\n      rowSize: 20, //Number of rows\n      pagesSize: 1, //Number of pages\n      page: 1, //current active page\n      menu: false,\n      rowSizesValue: [5, 10, 20],\n      sortType: \"desc\",\n      textNoti: \"\",\n      errorOccured: false,\n      showNoti: false,\n      sortByValue: \"createdAt\"\n    };\n  },\n\n  mounted: function() {\n    if (localStorage.getItem(THEME) == \"light\") {\n      document.getElementById(\"header\").style.backgroundColor = \"white\";\n      document.getElementById(\"Schedules\").style.backgroundColor = \"white\";\n    } else if (localStorage.getItem(THEME) == \"dark\") {\n      document.getElementById(\"header\").style.backgroundColor = \"black\";\n      document.getElementById(\"Schedules\").style.backgroundColor = \"black\";\n    }\n    if (localStorage.getItem(LANGUAGE) != \"en\") {\n      document.getElementsByTagName(\"H1\")[0].innerHTML = localStorage.getItem(\n        SCHEDULES\n      );\n      document.getElementsByTagName(\"H5\")[0].innerHTML = localStorage.getItem(\n        MESSAGE\n      );\n      document.getElementsByTagName(\"H5\")[1].innerHTML = localStorage.getItem(\n        NEXTRUN\n      );\n      document.getElementsByTagName(\"H5\")[2].innerHTML = localStorage.getItem(\n        ACTIVEAT\n      );\n      document.getElementsByTagName(\"H5\")[3].innerHTML = localStorage.getItem(\n        REPEAT\n      );\n      document.getElementsByTagName(\"H5\")[4].innerHTML = localStorage.getItem(\n        CHANNEL\n      );\n    }\n    //this.create();\n  },\n\n  filters: {\n    shortDate(value) {\n      let dateVar = new Date(value);\n      let dataVar2 = dateVar.toDateString();\n      let data = dataVar2.substring(4);\n      return data;\n    },\n    activeView(value) {\n      if (value == true) return \"Active\";\n      else return \"Not active\";\n    },\n    repeatView(value) {\n      if (value == true) return \"Repeat\";\n      else return \"Not repeat\";\n    }\n  },\n\n  methods: {\n    async reloadSchedules() {\n      var pg = this.page - 1;\n      try {\n        const res = await axios.get(\n          API_BASE_URL +\n            \"/api/schedules?page=\" +\n            pg +\n            \"&size=\" +\n            this.rowSize +\n            \"&sort=\" +\n            this.sortByValue +\n            \",\" +\n            this.sortType\n        );\n\n        if (res.data.totalPages < this.page)\n          this.changePage(res.data.totalPages);\n\n        this.schedulesData = res.data.content;\n        this.pagesSize = res.data.totalPages;\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n\n    showNotification(value) {\n      if (value == -1) {\n        this.textNoti = \"Some error have occured\";\n        this.errorOccured = true;\n      } else {\n        this.errorOccured = false;\n        this.textNoti = \"Succes\";\n      }\n      this.showNoti = !this.showNoti;\n      setTimeout(this.closeNoti, 1500);\n      {\n      }\n    },\n\n    closeNoti() {\n      this.showNoti = false;\n    },\n\n    showScheduleForm() {\n      this.$router.push(\"/dashboard/schedules/newSchedule\");\n    },\n\n    async editSchedule(id) {\n      this.$router.push(\"/dashboard/schedules/updateSchedule/\" + id);\n    },\n\n    async deleteSchedule(id) {\n      await axios.delete(API_BASE_URL + \"/api/schedules/\" + id);\n      var pg = this.page - 1;\n      try {\n        const res = await axios.get(\n          API_BASE_URL +\n            \"/api/schedules?page=\" +\n            pg +\n            \"&size=\" +\n            this.rowSize +\n            \"&sort=\" +\n            this.sortByValue +\n            \",\" +\n            this.sortType\n        );\n\n        if (res.data.numberOfElements == 0) {\n          if (this.page != 1) this.changePage(this.page - 1);\n        }\n        this.schedulesData = res.data.content;\n        if (res.data.totalPages == 0) this.pagesSize = 1;\n        else this.pagesSize = res.data.totalPages;\n        this.showNotification();\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n\n    toggleMenu() {\n      this.menu = !this.menu;\n    },\n\n    hideMenu() {\n      this.menu = false;\n    },\n\n    setRows(value) {\n      if (value != this.rowSize) {\n        this.rowSize = value;\n        this.reloadSchedules();\n      }\n      this.menu = !this.menu;\n    },\n\n    changePage(nextPage) {\n      this.page = nextPage;\n      this.reloadSchedules(nextPage - 1);\n    },\n\n    async create() {\n      try {\n        const res = await axios.get(\n          API_BASE_URL +\n            \"/api/schedules?page=0&size=\" +\n            this.rowSize +\n            \"&sort=\" +\n            this.sortByValue +\n            \",\" +\n            this.sortType\n        );\n        this.schedulesData = res.data.content;\n        if (res.data.totalPages == 0) this.pagesSize = 1;\n        else this.pagesSize = res.data.totalPages;\n        this.rowSize = res.data.size;\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n\n    sortBy(value) {\n      if (this.sortType == \"desc\") this.sortType = \"asc\";\n      else this.sortType = \"desc\";\n\n      this.sortByValue = value;\n      this.reloadSchedules();\n    }\n  },\n  directives: {\n    ClickOutside\n  }\n};\n",{"version":3,"sources":["Schedules.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Schedules.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"Schedules\" class=\"tabcontent\">\n    <router-view\n      @reload-schedules=\"reloadSchedules()\"\n      @show-notification=\"showNotification($event)\"\n    ></router-view>\n    <div id=\"header\">\n      <h1>Schedules</h1>\n    </div>\n    <div id=\"divlist\">\n      <ul id=\"list\">\n        <li id=\"title-li\">\n          <div class=\"column1 column\">\n            <h5>Message</h5>\n            <p>\n              <i class=\"material-icons\" @click=\"sortBy('message.title')\">arrow_drop_down</i>\n            </p>\n          </div>\n          <div class=\"column2 column\">\n            <h5>Next Run</h5>\n            <p>\n              <i class=\"material-icons\" @click=\"sortBy('runAt')\">arrow_drop_down</i>\n            </p>\n          </div>\n          <div class=\"column3 column\">\n            <h5>Active At</h5>\n            <p>\n              <i class=\"tooltip, material-icons\" @click=\"sortBy('active')\">arrow_drop_down</i>\n            </p>\n          </div>\n          <div class=\"column6 column\">\n            <h5>Repeat</h5>\n            <p>\n              <i class=\"tooltip, material-icons\" @click=\"sortBy('repeat')\">arrow_drop_down</i>\n            </p>\n          </div>\n          <div class=\"column5 column\">\n            <h5>Channel</h5>\n            <p>\n              <i class=\"tooltip, material-icons\" @click=\"sortBy('channel')\">arrow_drop_down</i>\n            </p>\n          </div>\n          <div class=\"column4 column\">\n            <p>\n              <i class=\"material-icons\">filter_list</i>\n            </p>\n          </div>\n        </li>\n\n        <li v-for=\"schedule in schedulesData\" :key=\"schedule.scheduleId\">\n          <div class=\"linear1\"></div>\n          <div class=\"linear2\"></div>\n          <div class=\"column1 column\">\n            <p>{{ schedule.message.text }}</p>\n          </div>\n          <div class=\"column2 column\">\n            <p>{{ schedule.runAt | shortDate}}</p>\n          </div>\n          <div class=\"column3 column\">\n            <p>{{ schedule.active | activeView }}</p>\n          </div>\n          <div class=\"column6 column\">\n            <p>{{ schedule.repeat | repeatView }}</p>\n          </div>\n          <div class=\"column5 column\">\n            <p>{{ schedule.channel }}</p>\n          </div>\n          <div class=\"column4 column\">\n            <i class=\"material-icons\" @click=\"editSchedule(schedule.scheduleId)\">create</i>\n            <i class=\"material-icons\" @click=\"deleteSchedule(schedule.scheduleId)\">delete</i>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n    <div id=\"footer\">\n      <button id=\"footer-btn\" @click=\"toggleMenu\" v-click-outside=\"hideMenu\">{{ this.rowSize }} Rows</button>\n      <div id=\"menu\" v-show=\"menu\">\n        <div\n          class=\"menu-article\"\n          v-for=\"rowValue in rowSizesValue\"\n          :key=\"rowValue\"\n          @click=\"setRows(rowValue)\"\n        >{{ rowValue }}</div>\n      </div>\n\n      <div class=\"text-xs-center\">\n        <v-pagination v-model=\"page\" :length=\"pagesSize\" :total-visible=\"5\" @input=\"changePage\"></v-pagination>\n      </div>\n    </div>\n\n    <button @click=\"showScheduleForm\" id=\"btn\">+</button>\n\n    <div\n      id=\"notification\"\n      v-show=\"showNoti\"\n      :class=\"{redBorder: errorOccured, greenBorder: !errorOccured}\"\n    >\n      <input\n        type=\"text\"\n        v-model=\"textNoti\"\n        readonly\n        :class=\"{redText: errorOccured, greenText: !errorOccured}\"\n      />\n      <button\n        @click=\"showNotification\"\n        :class=\"{redBackground: errorOccured, greenBackground: !errorOccured}\"\n      >OK</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  API_BASE_URL,\n  SCHEDULES,\n  MESSAGE,\n  NEXTRUN,\n  ACTIVEAT,\n  REPEAT,\n  CHANNEL\n} from \"../constants/index.js\";\nimport { CURRENT_USER_ROLE, THEME } from \"../constants/index.js\";\nimport { ACCESS_TOKEN, LANGUAGE } from \"../constants/index.js\";\nimport axios from \"axios\";\nimport ClickOutside from \"vue-click-outside\";\n\nexport default {\n  name: \"schedules\",\n\n  data() {\n    return {\n      schedulesData: [],\n      rowSize: 20, //Number of rows\n      pagesSize: 1, //Number of pages\n      page: 1, //current active page\n      menu: false,\n      rowSizesValue: [5, 10, 20],\n      sortType: \"desc\",\n      textNoti: \"\",\n      errorOccured: false,\n      showNoti: false,\n      sortByValue: \"createdAt\"\n    };\n  },\n\n  mounted: function() {\n    if (localStorage.getItem(THEME) == \"light\") {\n      document.getElementById(\"header\").style.backgroundColor = \"white\";\n      document.getElementById(\"Schedules\").style.backgroundColor = \"white\";\n    } else if (localStorage.getItem(THEME) == \"dark\") {\n      document.getElementById(\"header\").style.backgroundColor = \"black\";\n      document.getElementById(\"Schedules\").style.backgroundColor = \"black\";\n    }\n    if (localStorage.getItem(LANGUAGE) != \"en\") {\n      document.getElementsByTagName(\"H1\")[0].innerHTML = localStorage.getItem(\n        SCHEDULES\n      );\n      document.getElementsByTagName(\"H5\")[0].innerHTML = localStorage.getItem(\n        MESSAGE\n      );\n      document.getElementsByTagName(\"H5\")[1].innerHTML = localStorage.getItem(\n        NEXTRUN\n      );\n      document.getElementsByTagName(\"H5\")[2].innerHTML = localStorage.getItem(\n        ACTIVEAT\n      );\n      document.getElementsByTagName(\"H5\")[3].innerHTML = localStorage.getItem(\n        REPEAT\n      );\n      document.getElementsByTagName(\"H5\")[4].innerHTML = localStorage.getItem(\n        CHANNEL\n      );\n    }\n    //this.create();\n  },\n\n  filters: {\n    shortDate(value) {\n      let dateVar = new Date(value);\n      let dataVar2 = dateVar.toDateString();\n      let data = dataVar2.substring(4);\n      return data;\n    },\n    activeView(value) {\n      if (value == true) return \"Active\";\n      else return \"Not active\";\n    },\n    repeatView(value) {\n      if (value == true) return \"Repeat\";\n      else return \"Not repeat\";\n    }\n  },\n\n  methods: {\n    async reloadSchedules() {\n      var pg = this.page - 1;\n      try {\n        const res = await axios.get(\n          API_BASE_URL +\n            \"/api/schedules?page=\" +\n            pg +\n            \"&size=\" +\n            this.rowSize +\n            \"&sort=\" +\n            this.sortByValue +\n            \",\" +\n            this.sortType\n        );\n\n        if (res.data.totalPages < this.page)\n          this.changePage(res.data.totalPages);\n\n        this.schedulesData = res.data.content;\n        this.pagesSize = res.data.totalPages;\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n\n    showNotification(value) {\n      if (value == -1) {\n        this.textNoti = \"Some error have occured\";\n        this.errorOccured = true;\n      } else {\n        this.errorOccured = false;\n        this.textNoti = \"Succes\";\n      }\n      this.showNoti = !this.showNoti;\n      setTimeout(this.closeNoti, 1500);\n      {\n      }\n    },\n\n    closeNoti() {\n      this.showNoti = false;\n    },\n\n    showScheduleForm() {\n      this.$router.push(\"/dashboard/schedules/newSchedule\");\n    },\n\n    async editSchedule(id) {\n      this.$router.push(\"/dashboard/schedules/updateSchedule/\" + id);\n    },\n\n    async deleteSchedule(id) {\n      await axios.delete(API_BASE_URL + \"/api/schedules/\" + id);\n      var pg = this.page - 1;\n      try {\n        const res = await axios.get(\n          API_BASE_URL +\n            \"/api/schedules?page=\" +\n            pg +\n            \"&size=\" +\n            this.rowSize +\n            \"&sort=\" +\n            this.sortByValue +\n            \",\" +\n            this.sortType\n        );\n\n        if (res.data.numberOfElements == 0) {\n          if (this.page != 1) this.changePage(this.page - 1);\n        }\n        this.schedulesData = res.data.content;\n        if (res.data.totalPages == 0) this.pagesSize = 1;\n        else this.pagesSize = res.data.totalPages;\n        this.showNotification();\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n\n    toggleMenu() {\n      this.menu = !this.menu;\n    },\n\n    hideMenu() {\n      this.menu = false;\n    },\n\n    setRows(value) {\n      if (value != this.rowSize) {\n        this.rowSize = value;\n        this.reloadSchedules();\n      }\n      this.menu = !this.menu;\n    },\n\n    changePage(nextPage) {\n      this.page = nextPage;\n      this.reloadSchedules(nextPage - 1);\n    },\n\n    async create() {\n      try {\n        const res = await axios.get(\n          API_BASE_URL +\n            \"/api/schedules?page=0&size=\" +\n            this.rowSize +\n            \"&sort=\" +\n            this.sortByValue +\n            \",\" +\n            this.sortType\n        );\n        this.schedulesData = res.data.content;\n        if (res.data.totalPages == 0) this.pagesSize = 1;\n        else this.pagesSize = res.data.totalPages;\n        this.rowSize = res.data.size;\n      } catch (err) {\n        this.showNotification(-1);\n      }\n    },\n\n    sortBy(value) {\n      if (this.sortType == \"desc\") this.sortType = \"asc\";\n      else this.sortType = \"desc\";\n\n      this.sortByValue = value;\n      this.reloadSchedules();\n    }\n  },\n  directives: {\n    ClickOutside\n  }\n};\n</script>\n\n<style scoped>\nh1 {\n  margin-top: 0px;\n  width: 200px;\n  float: left;\n}\n\n#header {\n  margin-left: 15px;\n  margin-right: 10px;\n  display: block;\n  width: 99%;\n  float: right;\n  background-color: white;\n}\n\n#divlist {\n  width: 100%;\n  height: 100vh;\n}\n\nbody {\n  font-family: \"Lato\", sans-serif;\n  background: #eaeaea;\n}\n\n#Schedules {\n  height: 100vh;\n  width: 100%;\n  padding: 20px;\n}\n\n#btn {\n  float: right;\n  height: 60px;\n  width: 60px;\n  border-radius: 50%;\n  font-size: 30px;\n  position: absolute;\n  bottom: 50px;\n  right: 13px;\n  background-color: #006bf5;\n  color: white;\n  border: 1px solid white;\n  font-family: \"Courier New\", Courier, monospace;\n  line-height: 60px;\n  z-index: 99;\n}\n\n#btn:hover {\n  cursor: pointer;\n}\n\n#footer {\n  bottom: 15%;\n}\n\n.column1 {\n  width: 30%;\n  margin-right: 40px;\n}\n\n.column2 {\n  width: 7%;\n  margin-right: 25px;\n  margin-left: 0px;\n  position: relative;\n  right: 15px;\n}\n\n#title-li .column2 {\n  position: unset;\n  margin-left: 0px;\n}\n\n#title-li .column4 {\n  margin-left: 30px;\n}\n\n.column3 {\n  margin-left: 5px;\n  margin-right: 10px;\n}\n\n.column4 {\n  width: 30%;\n  margin-left: 0px;\n}\n\n.column5 {\n  width: 11%;\n  margin-left: 0px;\n  padding-left: 20px;\n}\n\n#title-li .column5 {\n  padding-left: 0px;\n}\n\n.column6 {\n  width: 7%;\n  margin-left: 10px;\n}\n\n.linear1 {\n  left: 33%;\n}\n\n.linear2 {\n  left: 67%;\n}\n\n#footer {\n  position: absolute;\n  bottom: -10px;\n  width: calc(93% - 20px);\n  margin-right: 20px;\n}\n</style>\n"]}]}