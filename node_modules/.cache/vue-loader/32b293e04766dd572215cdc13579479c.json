{"remainingRequest":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/incubator-2019-slack-bot-client/src/components/FormMessage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/src/components/FormMessage.vue","mtime":1565782322297},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":1565775065128},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/babel-loader/lib/index.js","mtime":1565775065104},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/vuetify-loader/lib/loader.js","mtime":1565775065884},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":1565775065128},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js","mtime":1565775065856}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport { API_BASE_URL } from '../constants';\n\nexport default {\n  name: \"formaM\",\n  data() {\n    return {\n      title: \"\",\n      text: \"\",\n      formType: \"Create\",\n      showTitleError: false,\n      showMessageError: false,\n      invalid: false,\n      liveValidation: false,\n      boldSelected: false,\n      italicSelected: false,\n      regexTitle: /^.{5,30}$/,\n      regexText: /^.{20,}$/\n    };\n  },\n\n  mounted: function() {\n    if (this.$route.params.id != null) {\n      this.create();\n      (this.formType = \"Update\");\n    }\n  },\n\n  watch: {\n    title(value) {\n      this.title = value;\n      if (this.liveValidation == true) this.check_title(value);\n    },\n\n    text(value) {\n      this.text = value;\n      if (this.liveValidation == true) this.check_text(value);\n    }\n  },\n\n  methods: {\n    exit() {\n      this.$emit(\"reload-messages\");\n      this.$router.go(-1);\n    },\n\n    check_title(value) {\n      if (!this.regexTitle.test(value)) {\n        this.showTitleError = true;\n        return false;\n      } else {\n        this.showTitleError = false;\n        return true;\n      }\n    },\n\n    check_text(value) {\n      if (!this.regexText.test(value)) {\n        this.showMessageError = true;\n        return false;\n      } else {\n        this.showMessageError = false;\n        return true;\n      }\n    },\n\n    select(value)\n    {\n      if(value == \"bold\")\n      {\n        if(this.boldSelected == false)\n          this.boldSelected = true;\n        else\n          this.boldSelected = false;\n      }\n      else if(value == \"italic\")\n      {\n        if(this.italicSelected == false)\n          this.italicSelected = true;\n        else\n          this.italicSelected = false;\n      }\n\n      if(this.italicSelected == true && this.boldSelected == true)\n        this.text += \"_* *_\";\n      else if(this.boldSelected == true)\n        this.text += \"* *\";\n      else if(this.italicSelected == true)\n        this.text += \"_ _\";\n    },\n\n    preview()\n    {\n      console.log(\"Preview (Bold: \" + this.boldSelected + \", Italic: \" + this.italicSelected + \")\");\n      this.text = this.text.replace(/_/g, \"\");\n    },\n\n    async save() {\n      this.liveValidation = true;\n      if (this.check_text(this.text) == false) this.invalid = true;\n      if (this.check_title(this.title) == false) this.invalid = true;\n      if (this.invalid == true) {\n        this.invalid = false;\n        return;\n      } else {\n        console.log(\"Stil: italic -> \" + this.italicSelected + \" bold -> \" + this.boldSelected);\n        var stileText = this.text;\n\n        this.text = stileText;\n        console.log(this.text);\n        if (this.$route.params.id == null) {\n          try {\n            await axios.post(API_BASE_URL+\"/api/messages\", {\n              title: this.title,\n              text: this.text\n            });\n          } catch (err) {\n            this.$emit(\"show-notification\", -1);\n            this.$router.go(-1);\n            return;\n          }\n        } else {\n\t\t  try \n\t\t  {\n            await axios.put(API_BASE_URL+\"/api/messages/\" + this.$route.params.id, { title: this.title, text: this.text });\n\t\t  } \n\t\t  catch (err) \n\t\t  {\n            this.$emit(\"show-notification\", -1);\n            this.$router.go(-1);\n            return;\n          }\n        }\n        this.$emit(\"reload-messages\");\n        this.$emit(\"show-notification\");\n        this.$router.go(-1);\n      }\n    },\n\n    async create() {\n      try\n      {\n\t\t    const res = await axios.get(API_BASE_URL+\"/api/messages/\" + this.$route.params.id);\n      \tthis.title = res.data.title;\n        this.text = res.data.text;\n      }\n      catch(err)\n      {\n        this.$emit(\"show-notification\", -1);\n      }\n    },\n  }\n};\n",{"version":3,"sources":["FormMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"FormMessage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"formaM\">\n    <div id=\"form-style-10\">\n      <form id=\"forma\">\n        <div id=\"section\">\n          <p>\n            {{ formType }} Message\n            <label id=\"close-icon\" @click=\"exit\" style=\"font-size: 20px\">X</label>\n          </p>\n        </div>\n\n        <div id=\"style-options\">\n          <div class=\"style-option\" style=\"font-style: bold\" :class=\"{styleOptionSelected: boldSelected}\" @click=\"select('bold')\"> Bold </div>\n          <div class=\"style-option\" style=\"font-style: italic\" :class=\"{styleOptionSelected: italicSelected}\" @click=\"select('italic')\"> Italic </div>\n        </div>\n\n        <div id=\"inner-wrap\">\n          <label :class=\"{errorText: showTitleError}\">Title</label>\n          <input\n            type=\"text\"\n            name=\"field1\"\n            placeholder=\"New message\"\n            v-model=\"title\"\n            id=\"field1\"\n            :class=\"{errorBorder: showTitleError}\"\n          />\n          <span v-show=\"showTitleError\">Title size should be between 5 and 30 characters</span>\n          <br>\n          <span v-show=\"boldSelected || italicSelected\" style=\"color: grey\">Please input text between this characters</span>\n\n          <label :class=\"{errorText: showMessageError}\">Text</label>\n          <textarea\n            id=\"textarea\"\n            name=\"field2\"\n            placeholder=\"Type your message text here\"\n            v-model=\"text\"\n            cols=\"30\"\n            rows=\"8\"\n            :class=\"{errorBorder: showMessageError}\"\n          ></textarea>\n          <span v-show=\"showMessageError\">Text size should be more then 20 characters</span>\n          <br><br>\n          <input type=\"button\" value=\"Save\" @click=\"save\" id=\"submit\" />\n          <input type=\"button\" value=\"Cancel\" @click=\"exit\" id=\"cancle\" />\n          <input type=\"button\" value=\"Preview\" @click=\"preview\" id=\"cancle\" />\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { API_BASE_URL } from '../constants';\n\nexport default {\n  name: \"formaM\",\n  data() {\n    return {\n      title: \"\",\n      text: \"\",\n      formType: \"Create\",\n      showTitleError: false,\n      showMessageError: false,\n      invalid: false,\n      liveValidation: false,\n      boldSelected: false,\n      italicSelected: false,\n      regexTitle: /^.{5,30}$/,\n      regexText: /^.{20,}$/\n    };\n  },\n\n  mounted: function() {\n    if (this.$route.params.id != null) {\n      this.create();\n      (this.formType = \"Update\");\n    }\n  },\n\n  watch: {\n    title(value) {\n      this.title = value;\n      if (this.liveValidation == true) this.check_title(value);\n    },\n\n    text(value) {\n      this.text = value;\n      if (this.liveValidation == true) this.check_text(value);\n    }\n  },\n\n  methods: {\n    exit() {\n      this.$emit(\"reload-messages\");\n      this.$router.go(-1);\n    },\n\n    check_title(value) {\n      if (!this.regexTitle.test(value)) {\n        this.showTitleError = true;\n        return false;\n      } else {\n        this.showTitleError = false;\n        return true;\n      }\n    },\n\n    check_text(value) {\n      if (!this.regexText.test(value)) {\n        this.showMessageError = true;\n        return false;\n      } else {\n        this.showMessageError = false;\n        return true;\n      }\n    },\n\n    select(value)\n    {\n      if(value == \"bold\")\n      {\n        if(this.boldSelected == false)\n          this.boldSelected = true;\n        else\n          this.boldSelected = false;\n      }\n      else if(value == \"italic\")\n      {\n        if(this.italicSelected == false)\n          this.italicSelected = true;\n        else\n          this.italicSelected = false;\n      }\n\n      if(this.italicSelected == true && this.boldSelected == true)\n        this.text += \"_* *_\";\n      else if(this.boldSelected == true)\n        this.text += \"* *\";\n      else if(this.italicSelected == true)\n        this.text += \"_ _\";\n    },\n\n    preview()\n    {\n      console.log(\"Preview (Bold: \" + this.boldSelected + \", Italic: \" + this.italicSelected + \")\");\n      this.text = this.text.replace(/_/g, \"\");\n    },\n\n    async save() {\n      this.liveValidation = true;\n      if (this.check_text(this.text) == false) this.invalid = true;\n      if (this.check_title(this.title) == false) this.invalid = true;\n      if (this.invalid == true) {\n        this.invalid = false;\n        return;\n      } else {\n        console.log(\"Stil: italic -> \" + this.italicSelected + \" bold -> \" + this.boldSelected);\n        var stileText = this.text;\n\n        this.text = stileText;\n        console.log(this.text);\n        if (this.$route.params.id == null) {\n          try {\n            await axios.post(API_BASE_URL+\"/api/messages\", {\n              title: this.title,\n              text: this.text\n            });\n          } catch (err) {\n            this.$emit(\"show-notification\", -1);\n            this.$router.go(-1);\n            return;\n          }\n        } else {\n\t\t  try \n\t\t  {\n            await axios.put(API_BASE_URL+\"/api/messages/\" + this.$route.params.id, { title: this.title, text: this.text });\n\t\t  } \n\t\t  catch (err) \n\t\t  {\n            this.$emit(\"show-notification\", -1);\n            this.$router.go(-1);\n            return;\n          }\n        }\n        this.$emit(\"reload-messages\");\n        this.$emit(\"show-notification\");\n        this.$router.go(-1);\n      }\n    },\n\n    async create() {\n      try\n      {\n\t\t    const res = await axios.get(API_BASE_URL+\"/api/messages/\" + this.$route.params.id);\n      \tthis.title = res.data.title;\n        this.text = res.data.text;\n      }\n      catch(err)\n      {\n        this.$emit(\"show-notification\", -1);\n      }\n    },\n  }\n};\n</script>\n\n<style scoped>\n* {\n  font-family: \"Roboto\", sans-serif;\n}\n\n#form-style-10 {\n  width: 640px;\n  height: 530px;\n  padding: 20px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  background: #fff;\n  overflow: hidden;\n  box-sizing: border-box;\n  display: block;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  z-index: 95;\n}\n\n#form-style-10 #inner-wrap {\n  display: block;\n  padding: 20px;\n  padding-top: 0px;\n  background: #fff;\n  border-radius: 6px;\n  margin-bottom: 15px;\n}\n\n#style-options{\n  display: flex;\n  padding-left: 20px;\n  margin-top: 15px;\n}\n\n.style-option{\n  width: 50px;\n  height: 35px;\n  border: 1px inset rgba(0, 0, 0, 0.2);\n  text-align: center;\n  margin-right: 15px;\n  line-height: 35px;\n  border-radius: 7px;\n}\n\n.style-option:hover{\n  cursor: pointer;\n  background-color: rgb(226, 217, 217);\n  border: none;\n}\n\n.styleOptionSelected{\n  cursor: pointer;\n  background-color: rgb(226, 217, 217);\n  border: none;\n}\n\n#form-style-10 label {\n  display: block;\n  font: 13px Arial, Helvetica, sans-serif;\n  margin-bottom: 15px;\n}\n\n#form-style-10 input[type=\"text\"],\n#form-style-10 input[type=\"date\"],\n#form-style-10 input[type=\"datetime\"],\n#form-style-10 input[type=\"email\"],\n#form-style-10 input[type=\"number\"],\n#form-style-10 input[type=\"search\"],\n#form-style-10 input[type=\"time\"],\n#form-style-10 input[type=\"url\"],\n#form-style-10 input[type=\"password\"],\n#form-style-10 textarea,\n#form-style-10 select {\n  padding-top: 10px;\n  overflow: none;\n  margin-bottom: 10px;\n  display: block;\n  box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  width: 100%;\n  height: 40%;\n  padding: 8px;\n  border-radius: 6px;\n  -webkit-border-radius: 6px;\n  -moz-border-radius: 6px;\n  font-size: 15px;\n}\n\ninput,\ntextarea {\n  border: 1px inset;\n  border-color: rgba(0, 0, 0, 0.2);\n}\n\n#form-style-10 #section {\n  font: normal 23px \"Bitter\", serif;\n  padding-left: 20px;\n}\n\n#form-style-10 #section p {\n  width: 100%;\n  height: 20%;\n  font-weight: bold;\n  color: black;\n  margin-top: 18px;\n  margin-bottom: 20px;\n}\n\n#form-style-10 input[type=\"button\"] {\n  margin-right: 15px;\n  float: right;\n  padding: 8px 8px 8px 8px;\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  color: #4d4d4d;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n  font: normal 30px \"Bitter\", serif;\n  -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n  border: 1px solid #257c9e;\n  font-size: 15px;\n  border: none;\n  background: #fff;\n}\n\n#form-style-10 #submit {\n  float: right;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  width: 18%;\n  height: 30%;\n  overflow: hidden;\n  background: #0080ff;\n  padding: 8px 20px 8px 20px;\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  color: #fff;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n  font: normal 30px \"Bitter\", serif;\n  border: 1px solid #0080ff;\n  font-size: 15px;\n}\n\n#form-style-10 #submit:hover {\n  background: darkblue;\n  -moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n  -webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n  box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n#form-style-10 .privacy-policy {\n  float: right;\n  width: 250px;\n  font: 12px Arial, Helvetica, sans-serif;\n  color: #4d4d4d;\n  margin-top: 10px;\n  text-align: right;\n}\n#textarea {\n  display: block;\n  overflow: none;\n  height: 100%;\n  width: 100%;\n}\n\n#close-icon {\n  display: inline;\n  text-align: right;\n  float: right;\n  margin: 0 20px 10px 0px;\n  position: unset;\n}\n\n#close-icon,\n#submit,\n#cancle:hover {\n  cursor: pointer;\n}\n\nspan {\n  color: rgb(253, 38, 38);\n  font-weight: 400;\n}\n\nlabel {\n  position: relative;\n  top: 20px;\n  left: 13px;\n  background-color: white;\n  display: inline;\n  width: 35px;\n  text-align: center;\n  color: #888;\n}\n\n.errorBorder {\n  border-color: red;\n}\n</style>\n"]}]}