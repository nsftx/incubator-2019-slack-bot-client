{"remainingRequest":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/FormTrigger.vue?vue&type=style&index=0&id=66a5b054&scoped=true&lang=css&","dependencies":[{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/FormTrigger.vue","mtime":1565690797170},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*{\n    font-family: 'Roboto', sans-serif;\n}\n\n#formaT{\n    width: 640px;\n    height: 480px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: white;\n    padding: 10px;\n    z-index: 99;\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n#form-style-10{\n    width:40%;\n    height:auto;\n\tpadding:20px;\n\tposition:absolute;\n\ttop:50%;\n\tleft:50%;\n\ttransform:translateX(-50%) translateY(-50%);\n\tbackground: #FFF;\n    overflow:hidden;\n    box-sizing:border-box;\n    display:block;\n    z-index: 99;\n}\n.form-style-10 .inner-wrap{\n    height:auto;\n    display:block;\n\tpadding: 0 20px 20px 20px;\n\tbackground: #fff;\n\tborder-radius: 6px;\n\tmargin-bottom: 15px;\n}\n\n.form-style-10 label{\n\tfont: 13px Arial, Helvetica, sans-serif;\n\tcolor: #888;\n\tmargin-bottom: 15px;\n}\n.form-style-10 select{\n    color:#222222;\n    font: 13px Arial, Helvetica, sans-serif;\n    font-weight: 400;\n}\n.form-style-10 input[type=\"text\"],\n.form-style-10 select,\n.form-style-10 input[type=\"datetime\"],\n.form-style-10 input[type=\"email\"],\n.form-style-10 input[type=\"number\"],\n.form-style-10 input[type=\"search\"],\n.form-style-10 input[type=\"time\"],\n.form-style-10 input[type=\"url\"],\n.form-style-10 input[type=\"password\"],\n.form-style-10 textarea,\n.form-style-10 select {\n    padding-top:10px;\n    overflow:none;\n    margin-bottom: 15px;\n\tdisplay: block;\n\tbox-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\t-moz-box-sizing: border-box;\n    width: 100%;\n    height:40%;\n\tpadding: 8px;\n\tborder-radius: 6px;\n\t-webkit-border-radius:6px;\n\t-moz-border-radius:6px;\n    font-size: 15px;\n}\n\n.form-style-10 .section{\n\tfont: normal 23px 'Bitter', serif;\n    padding-left: 20px;\n}\n\n.form-style-10 .section p{\n    height:20%;\n    width:100%;\n    font-weight: bold;\n    color:black;\n    margin-top: 18px;\n    margin-bottom: 25px;\n}\n\n.form-style-10 #submit{\n    float:right;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n    width:20%;\n    height:30%;\n    overflow: hidden;\n    background: #0080ff;\n\tpadding: 8px 20px 8px 20px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor: #fff;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\tborder: 1px solid #0080ff;;\n\tfont-size: 15px;\n} \n\n.form-style-10 #submit:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 input[type=\"button\"]{\n    margin-right:35px;\n    float:right;\n    padding: 8px 8px 8px 8px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor:#4D4D4D;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tborder: 1px solid #257C9E;\n\tfont-size: 15px;\n    border:none;\n    background:#fff;\n    text-align:center;\n}\n.form-style-10 input[type=\"submit\"]:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n.form-style-10 .privacy-policy{\n\tfloat: right;\n\twidth: 250px;\n\tfont: 12px Arial, Helvetica, sans-serif;\n\tcolor: #4D4D4D;\n\tmargin-top: 10px;\n\ttext-align: right;\n}\n#textarea{\n    display:block;\n    overflow:none;\n    height:100%;\n    width:100%;\n    margin-bottom: 20px;\n}\n\n#close-icon{\n    font-size: 25px;\n    display:inline;\n    text-align:right;\n    float:right;\n    margin: 0 20px 10px 0px;\n}\n\n#close-icon:hover{\n    cursor: pointer;\n}\n\n.la{\n    position: relative;\n    top: 7px;\n    left: 10px;\n    text-align: center;\n    padding: 0px 7px;\n    background-color: white;\n}\n\nspan {\n  color: rgb(253, 38, 38);\n  font-weight: 400;\n}\n\n.errorBorder {\n    border: 1px inset rgb(253, 38, 38);\n}\n\n.noErrorBorder{\n    border: 1px inset rgba(0, 0, 0, 0.2);\n}\n\n.checkBox{\n    position: relative;\n    top: 15px;\n    left: 5px;\n}\n\n",{"version":3,"sources":["FormTrigger.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0SA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"FormTrigger.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n\n<div id=\"formaT\">\n    <div class=\"form-style-10\">\n<form id=\"forma\">\n    <div class=\"section\">  <p>{{ formType }} Trigger <label id=\"close-icon\" @click=\"exit\"> x </label> </p> </div>\n    <div class=\"inner-wrap\">\n        <label class=\"la\">Message</label>\n\n        <select id=\"field1\" class=\"border\" v-model=\"messageTitle\" @click=\"getMessageID\" :class=\"{errorBorder: showTitleError, noErrorBorder: !showTitleError}\"> \n            \n            <option disabled selected >{{ messageTitle }}</option>\n            <option v-for=\"message in messagesData\" :key=\"message.messageId\" v-show=\"showMessageOption\"> {{ message.title }} </option>\n            \n        </select>\n\n        <span v-show=\"showTitleError\">Message title is required</span>\n        <br>\n\n        <label class=\"la\"> Trigger </label>  \n        <select  id=\"field2\" class=\"border\"  v-model=\"triggerType\" :class=\"{errorBorder: showTriggerError, noErrorBorder: !showTriggerError}\"> \n            <option disabled selected >Some trigger type</option>\n            <option>On channel join</option>\n        </select>\n\n        <span v-show=\"showTriggerError\">Trigger type is required</span>\n        <br>\n        <br>\n\n        <select id=\"field3\" class=\"border\"  v-model=\"channelName\" :class=\"{errorBorder: showChannelError, noErrorBorder: !showChannelError}\"> \n            <option disabled selected >Some channel name</option>\n            <option v-for=\"channel in channelsData\" :key=\"channel.name\"> {{ channel.name }} </option>\n        </select>\n\n        <span v-show=\"showChannelError\">Channel name is required</span>\n        <br>\n        <br>\n\n        <input type=\"checkbox\" id=\"check\" v-model=\"active\" class=\"checkBox\" /> <label id=\"active\" for=\"check\" class=\"checkBox\"> Active </label> \n    <br>\n    <br>\n        <input type=\"button\" value=\"Save\" id=\"submit\" @click=\"save\"/>\n        <input type=\"button\" value=\"Cancel\" @click=\"exit\" />\n</div>\n</form>\n</div>\n</div>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport { API_BASE_URL } from '../constants';\n\n/*\nwindow.addEventListener(\"mouseup\", function(event){\n\tif(event.target != document.getElementById(\"formaT\") && event.target.parentNode != document.getElementById(\"formaT\") && \n\tevent.target.parentNode !=  document.getElementById(\"forma\") && event.target.parentNode != document.getElementById(\"inner-wrap\")\n    && event.target != document.getElementsByClassName(\"section\")[0] && event.target.parentNode != document.getElementsByClassName(\"section\")[0]\n    && event.target != document.getElementById(\"check\") && event.target != document.getElementById(\"active\") && event.target != document.getElementById(\"field3\")\n    && event.target != document.getElementById(\"field1\") && event.target != document.getElementById(\"field2\") && event.target != document.getElementsByClassName(\"la\")[0]\n    && event.target != document.getElementsByClassName(\"la\")[1] && event.target != document.getElementsByClassName(\"la\")[2] )\n\t{\n\t\tdocument.getElementById(\"formaT\").style.display = \"none\";\n\t\tdocument.getElementById(\"field1\").value = \"\";\n        document.getElementById(\"field2\").value = \"\";\n\t\tdocument.getElementById(\"field3\").value = \"\";        \n\t}\n})*/\n\nexport default {\n    name: \"formaT\",\n    data(){\n        return{\n            messagesData: [],\n            channelsData: [],\n            targetMess: \"\",\n            messageTitle: \"Some message title\",\n            triggerType: \"Some trigger type\",\n            channelName: \"Some channel name\",\n            active: false,\n            formType: \"Create\",\n            messId: \"\",\n            liveValidation: false,\n            showTitleError: false,\n            showTriggerError: false,\n            showChannelError: false,\n            showMessageOption: true\n        }\n    },\n    mounted: async function()\n    {\n        if (this.$route.params.id != null) \n        {\n\n            var currentR = this.$router.currentRoute.fullPath;\n            var path = currentR.substring(0, 30);\n\n            if(path == \"/dashboard/messages/newTrigger\")\n            {\n                try\n                {\n                    const res = await axios.get(API_BASE_URL+\"/api/messages/\" + this.$route.params.id);\n                    this.messagesData = res.data;\n                    this.messageTitle = this.messagesData.title;\n                    this.showMessageOption = false;\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);                    \n                }\n            }\n            else\n            {\n                this.formType = \"Update\";\n\n                var res;\n                try\n                {\n                    res = await axios.get(API_BASE_URL+\"/api/triggers/\" + this.$route.params.id);\n                    this.messageTitle = res.data.message.title;\n                    this.channelName = res.data.channel;\n                    this.active = res.data.active;\n                    this.triggerType = res.data.triggerType;\n                    this.messId = res.data.message.messageId;\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);         \n                }\n                try\n                {\n                    const resM = await axios.get(API_BASE_URL+\"/api/messages\");\n                    this.messagesData = resM.data.content;\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);               \n                }\n            }\n        }\n        else\n        {\n            try \n            {\n                const res = await axios.get(API_BASE_URL+\"/api/messages\");\n                this.messagesData = res.data.content;             \n            }\n            catch (err) {\n                this.$emit(\"show-notification\", -1);\n            }\n        }\n        try\n        {\n            //Aplikacija nije povezana sa listom kanala\n            const res = await axios.get(API_BASE_URL+\"/api/channels\");\n            this.channelsData = [{name: \"#general\"}, {name: \"#incubator\"}];\n        }\n        catch(err)\n        {\n            this.$emit(\"show-notification\", -1);\n        }\n    },\n\n    watch: {\n        messageTitle(value) {\n          this.messageTitle = value;\n          if (this.liveValidation == true) this.check_messageTitle(value);\n        },\n\n        triggerType(value) {\n          this.triggerType = value;\n          if (this.liveValidation == true) this.check_triggerType(value);\n        },\n\n        channelName(value){\n            this.channelName = value;\n            if (this.liveValidation == true) this.check_channelName(value);\n        }\n    },\n\n    methods: {\n        exit(){\n            this.$router.go(-1);\n        },\n\n        check_messageTitle(value) \n        {\n            if (this.messageTitle == \"Some message title\") \n            {\n                this.showTitleError = true;\n                return false;\n            } \n            else\n            {\n                this.showTitleError = false;\n                return true;\n            }\n        },\n\n        check_triggerType(value) {\n            if (this.triggerType == \"Some trigger type\") \n            {\n                this.showTriggerError = true;\n                return false;\n            } \n            else {\n                this.showTriggerError = false;\n                return true;\n            }\n        },\n\n        check_channelName(value) {\n            if (this.channelName == \"Some channel name\") \n            {\n                this.showChannelError = true;\n                return false;\n            } \n            else {\n                this.showChannelError = false;\n                return true;\n            }\n        },\n\n        async save(){\n\n            this.liveValidation = true;\n            if (this.check_messageTitle(this.messageTitle) == false) this.invalid = true;\n            if (this.check_triggerType(this.triggerType) == false) this.invalid = true;\n            if (this.check_channelName(this.channelName) == false) this.invalid = true;\n            if (this.invalid == true) \n            {\n                this.invalid = false;\n                return;\n            }\n\n            if(this.$route.params.id != null)\n            {\n                var cr = this.$router.currentRoute.fullPath;\n                var path = cr.substring(0, 30);\n\n                if(path == \"/dashboard/messages/newTrigger\")\n                {\n                    try\n                    {\n                        await axios.post(API_BASE_URL+\"/api/triggers\", {channel: this.channelName, triggerType: this.triggerType, active: this.active, messageId: this.$route.params.id})\n                        this.$emit(\"show-notification\")                    \n                    }\n                    catch(err)\n                    {\n                        this.$emit(\"show-notification\", -1)\n                    }\n                }\n                else\n                {\n                    try\n                    {\n                        const res = await axios.get(API_BASE_URL+\"/api/messages\");\n                        this.messagesData = res.data.content;\n\n                        await axios.put(API_BASE_URL+\"/api/triggers/\" + this.$route.params.id, {channel: this.channelName, triggerType: this.triggerType, active: this.active, messageId: this.messId})\n                        this.$emit(\"show-notification\")                    \n                    }\n                    catch(err)\n                    {\n                        this.$emit(\"show-notification\", -1)\n                    }\n                }\n            }\n            else\n            {\n                try\n                {\n                    await axios.post(API_BASE_URL+\"/api/triggers\", {active: this.active, channel: this.channelName, messageId: this.messId, triggerType:  this.triggerType});\n                    this.$emit(\"show-notification\")\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);\n                }\n            }\n            this.$emit(\"reload-triggers\");\n            this.$router.go(-1);\n        },\n        getMessageID()\n        {   \n            if(this.messagesData.length>1)\n            {\n                this.targetMess = this.messagesData.filter( mess => mess.title == this.messageTitle);\n                this.messId = this.targetMess[0].messageId;\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n*{\n    font-family: 'Roboto', sans-serif;\n}\n\n#formaT{\n    width: 640px;\n    height: 480px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: white;\n    padding: 10px;\n    z-index: 99;\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n#form-style-10{\n    width:40%;\n    height:auto;\n\tpadding:20px;\n\tposition:absolute;\n\ttop:50%;\n\tleft:50%;\n\ttransform:translateX(-50%) translateY(-50%);\n\tbackground: #FFF;\n    overflow:hidden;\n    box-sizing:border-box;\n    display:block;\n    z-index: 99;\n}\n.form-style-10 .inner-wrap{\n    height:auto;\n    display:block;\n\tpadding: 0 20px 20px 20px;\n\tbackground: #fff;\n\tborder-radius: 6px;\n\tmargin-bottom: 15px;\n}\n\n.form-style-10 label{\n\tfont: 13px Arial, Helvetica, sans-serif;\n\tcolor: #888;\n\tmargin-bottom: 15px;\n}\n.form-style-10 select{\n    color:#222222;\n    font: 13px Arial, Helvetica, sans-serif;\n    font-weight: 400;\n}\n.form-style-10 input[type=\"text\"],\n.form-style-10 select,\n.form-style-10 input[type=\"datetime\"],\n.form-style-10 input[type=\"email\"],\n.form-style-10 input[type=\"number\"],\n.form-style-10 input[type=\"search\"],\n.form-style-10 input[type=\"time\"],\n.form-style-10 input[type=\"url\"],\n.form-style-10 input[type=\"password\"],\n.form-style-10 textarea,\n.form-style-10 select {\n    padding-top:10px;\n    overflow:none;\n    margin-bottom: 15px;\n\tdisplay: block;\n\tbox-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\t-moz-box-sizing: border-box;\n    width: 100%;\n    height:40%;\n\tpadding: 8px;\n\tborder-radius: 6px;\n\t-webkit-border-radius:6px;\n\t-moz-border-radius:6px;\n    font-size: 15px;\n}\n\n.form-style-10 .section{\n\tfont: normal 23px 'Bitter', serif;\n    padding-left: 20px;\n}\n\n.form-style-10 .section p{\n    height:20%;\n    width:100%;\n    font-weight: bold;\n    color:black;\n    margin-top: 18px;\n    margin-bottom: 25px;\n}\n\n.form-style-10 #submit{\n    float:right;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n    width:20%;\n    height:30%;\n    overflow: hidden;\n    background: #0080ff;\n\tpadding: 8px 20px 8px 20px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor: #fff;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\tborder: 1px solid #0080ff;;\n\tfont-size: 15px;\n} \n\n.form-style-10 #submit:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 input[type=\"button\"]{\n    margin-right:35px;\n    float:right;\n    padding: 8px 8px 8px 8px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor:#4D4D4D;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tborder: 1px solid #257C9E;\n\tfont-size: 15px;\n    border:none;\n    background:#fff;\n    text-align:center;\n}\n.form-style-10 input[type=\"submit\"]:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n.form-style-10 .privacy-policy{\n\tfloat: right;\n\twidth: 250px;\n\tfont: 12px Arial, Helvetica, sans-serif;\n\tcolor: #4D4D4D;\n\tmargin-top: 10px;\n\ttext-align: right;\n}\n#textarea{\n    display:block;\n    overflow:none;\n    height:100%;\n    width:100%;\n    margin-bottom: 20px;\n}\n\n#close-icon{\n    font-size: 25px;\n    display:inline;\n    text-align:right;\n    float:right;\n    margin: 0 20px 10px 0px;\n}\n\n#close-icon:hover{\n    cursor: pointer;\n}\n\n.la{\n    position: relative;\n    top: 7px;\n    left: 10px;\n    text-align: center;\n    padding: 0px 7px;\n    background-color: white;\n}\n\nspan {\n  color: rgb(253, 38, 38);\n  font-weight: 400;\n}\n\n.errorBorder {\n    border: 1px inset rgb(253, 38, 38);\n}\n\n.noErrorBorder{\n    border: 1px inset rgba(0, 0, 0, 0.2);\n}\n\n.checkBox{\n    position: relative;\n    top: 15px;\n    left: 5px;\n}\n\n</style>"]}]}