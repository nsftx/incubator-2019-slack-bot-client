{"remainingRequest":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/newsmay/Desktop/NewFolder/novi/node_modules/vuetify-loader/lib/loader.js!/home/newsmay/Desktop/NewFolder/novi/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/NewFolder/novi/src/components/FormMessage.vue?vue&type=template&id=5b319b23&scoped=true&","dependencies":[{"path":"/home/newsmay/Desktop/NewFolder/novi/src/components/FormMessage.vue","mtime":1566392570739},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/cache-loader/dist/cjs.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vuetify-loader/lib/loader.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/cache-loader/dist/cjs.js","mtime":1565775065000},{"path":"/home/newsmay/Desktop/NewFolder/novi/node_modules/vue-loader/lib/index.js","mtime":1565775065000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"formaM\" } }, [\n    _c(\"div\", { attrs: { id: \"form-style-10\" } }, [\n      _c(\"form\", { attrs: { id: \"forma\" } }, [\n        _c(\"div\", { attrs: { id: \"section\" } }, [\n          _c(\"p\", [\n            _c(\"span\", { attrs: { id: \"formTitle\" } }, [\n              _vm._v(\" \" + _vm._s(_vm.formType) + \" Message \")\n            ]),\n            _c(\n              \"label\",\n              {\n                staticStyle: { \"font-size\": \"20px\" },\n                attrs: { id: \"close-icon\" },\n                on: { click: _vm.exit }\n              },\n              [_vm._v(\"X\")]\n            )\n          ])\n        ]),\n        _c(\"div\", { attrs: { id: \"style-options\" } }, [\n          _c(\n            \"div\",\n            {\n              staticClass: \"style-option\",\n              class: { styleOptionSelected: _vm.boldSelected },\n              staticStyle: { \"font-style\": \"bold\" },\n              on: {\n                click: function($event) {\n                  return _vm.select(\"bold\")\n                }\n              }\n            },\n            [_vm._v(\"Bold\")]\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"style-option\",\n              class: { styleOptionSelected: _vm.italicSelected },\n              staticStyle: { \"font-style\": \"italic\" },\n              on: {\n                click: function($event) {\n                  return _vm.select(\"italic\")\n                }\n              }\n            },\n            [_vm._v(\"Italic\")]\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"style-option\",\n              class: { styleOptionSelected: _vm.urlSelected },\n              on: {\n                click: function($event) {\n                  return _vm.select(\"url\")\n                }\n              }\n            },\n            [_vm._v(\"Url\")]\n          )\n        ]),\n        _c(\"div\", { attrs: { id: \"inner-wrap\" } }, [\n          _c(\"label\", { class: { errorText: _vm.showTitleError } }, [\n            _vm._v(\"Title\")\n          ]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.title,\n                expression: \"title\"\n              }\n            ],\n            class: { errorBorder: _vm.showTitleError },\n            attrs: {\n              autocomplete: \"off\",\n              type: \"text\",\n              name: \"field1\",\n              placeholder: \"New message\",\n              id: \"field1\"\n            },\n            domProps: { value: _vm.title },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.title = $event.target.value\n              }\n            }\n          }),\n          _c(\n            \"span\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.showTitleError,\n                  expression: \"showTitleError\"\n                }\n              ]\n            },\n            [_vm._v(\"Title size should be between 5 and 30 characters\")]\n          ),\n          _c(\"br\"),\n          _c(\n            \"span\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.boldSelected || _vm.italicSelected,\n                  expression: \"boldSelected || italicSelected\"\n                }\n              ],\n              staticStyle: { color: \"grey\" }\n            },\n            [_vm._v(\"Please input text between \" + _vm._s(_vm.styleCharacters))]\n          ),\n          _c(\n            \"span\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.urlSelected,\n                  expression: \"urlSelected\"\n                }\n              ],\n              staticStyle: { color: \"grey\" }\n            },\n            [\n              _vm._v(\n                \"Please input your url instead url and your text instead text\"\n              )\n            ]\n          ),\n          _c(\"label\", { class: { errorText: _vm.showMessageError } }, [\n            _vm._v(\"Text\")\n          ]),\n          _c(\"textarea\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.text,\n                expression: \"text\"\n              }\n            ],\n            class: { errorBorder: _vm.showMessageError },\n            attrs: {\n              id: \"textarea\",\n              name: \"field2\",\n              placeholder: \"Type your message text here\",\n              cols: \"30\",\n              rows: \"8\"\n            },\n            domProps: { value: _vm.text },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.text = $event.target.value\n              }\n            }\n          }),\n          _c(\n            \"span\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.showMessageError,\n                  expression: \"showMessageError\"\n                }\n              ]\n            },\n            [_vm._v(\"Text size should be more then 20 characters\")]\n          ),\n          _c(\"br\"),\n          _c(\"br\"),\n          _c(\"input\", {\n            attrs: { type: \"button\", value: _vm.formType, id: \"submit\" },\n            on: { click: _vm.save }\n          }),\n          _c(\"input\", {\n            attrs: { type: \"button\", value: \"Cancel\", id: \"cancle\" },\n            on: { click: _vm.exit }\n          })\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}