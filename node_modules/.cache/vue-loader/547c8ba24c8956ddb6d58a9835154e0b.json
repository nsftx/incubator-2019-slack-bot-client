{"remainingRequest":"/home/newsmay/Desktop/novi/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/newsmay/Desktop/novi/node_modules/vuetify-loader/lib/loader.js!/home/newsmay/Desktop/novi/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/newsmay/Desktop/novi/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/novi/src/components/FormPoll.vue?vue&type=template&id=539fa55a&scoped=true&","dependencies":[{"path":"/home/newsmay/Desktop/novi/src/components/FormPoll.vue","mtime":1566219940602},{"path":"/home/newsmay/Desktop/novi/node_modules/cache-loader/dist/cjs.js","mtime":1565775065128},{"path":"/home/newsmay/Desktop/novi/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1565775065856},{"path":"/home/newsmay/Desktop/novi/node_modules/vuetify-loader/lib/loader.js","mtime":1565775065884},{"path":"/home/newsmay/Desktop/novi/node_modules/cache-loader/dist/cjs.js","mtime":1565775065128},{"path":"/home/newsmay/Desktop/novi/node_modules/vue-loader/lib/index.js","mtime":1565775065856}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"FormPoll\" } }, [\n    _c(\"div\", { attrs: { id: \"form-style-10\" } }, [\n      _c(\"form\", { attrs: { id: \"forma\" } }, [\n        _c(\"div\", { attrs: { id: \"section\" } }, [\n          _c(\"p\", [\n            _vm._v(\"\\n            Create Poll\\n            \"),\n            _c(\n              \"label\",\n              {\n                staticStyle: { \"font-size\": \"20px\" },\n                attrs: { id: \"close-icon\" },\n                on: { click: _vm.exit }\n              },\n              [_vm._v(\"X\")]\n            )\n          ])\n        ]),\n        _c(\"label\", { staticClass: \"la\" }, [_vm._v(\"Title\")]),\n        _c(\n          \"div\",\n          { attrs: { id: \"inner-wrap\" } },\n          [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.title,\n                  expression: \"title\"\n                }\n              ],\n              class: {\n                errorBorder: _vm.showTitleError,\n                noErrorBorder: !_vm.showTitleError\n              },\n              attrs: {\n                autocomplete: \"off\",\n                type: \"text\",\n                name: \"field1\",\n                placeholder: \"New poll title\",\n                id: \"field1\"\n              },\n              domProps: { value: _vm.title },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.title = $event.target.value\n                }\n              }\n            }),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showTitleError,\n                    expression: \"showTitleError\"\n                  }\n                ]\n              },\n              [_vm._v(\"Title size is minimum 3 characters\")]\n            ),\n            _c(\"br\"),\n            _c(\"br\"),\n            _c(\"label\", [_vm._v(\"Choices:\")]),\n            _vm._l(_vm.choices, function(choice, index) {\n              return _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: choice.choiceValue,\n                    expression: \"choice.choiceValue\"\n                  }\n                ],\n                key: index,\n                class: { noErrorBorder: true },\n                attrs: { type: \"text\", placeholder: index + 1 + \".\" },\n                domProps: { value: choice.choiceValue },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(choice, \"choiceValue\", $event.target.value)\n                  }\n                }\n              })\n            }),\n            _c(\"input\", {\n              class: { disabledButton: _vm.choices.length == 5 },\n              attrs: {\n                type: \"button\",\n                value: \"+\",\n                disabled: _vm.choices.length == 5,\n                id: \"choiceButton\"\n              },\n              on: { click: _vm.addNewChoice }\n            }),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showChoiceError,\n                    expression: \"showChoiceError\"\n                  }\n                ]\n              },\n              [_vm._v(\"Choice can not be empty\")]\n            ),\n            _c(\"br\"),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.choices.length == 5,\n                    expression: \"choices.length==5\"\n                  }\n                ],\n                staticStyle: { color: \"#888\" }\n              },\n              [_vm._v(\" Maximum number of choices has been reached \")]\n            ),\n            _c(\"br\"),\n            _c(\"br\"),\n            _c(\"br\"),\n            _c(\"input\", {\n              staticClass: \"input-options\",\n              attrs: { type: \"button\", value: \"Save\", id: \"submit\" },\n              on: { click: _vm.save }\n            }),\n            _c(\"input\", {\n              staticClass: \"input-options\",\n              attrs: { type: \"button\", value: \"Cancel\", id: \"cancle\" },\n              on: { click: _vm.exit }\n            })\n          ],\n          2\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}