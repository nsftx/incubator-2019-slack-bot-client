{"remainingRequest":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/Messages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/Messages.vue","mtime":1565954900664},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport { THEME_ID, THEME, API_BASE_URL} from \"../constants/index.js\";\nimport {USER_EMAIL} from \"../constants/index.js\";\nimport {ACCESS_TOKEN} from \"../constants/index.js\";\nimport axios from \"axios\";\nimport ClickOutside from \"vue-click-outside\";\nimport { setTimeout } from 'timers';\nconst headers = {\n  'Content-Type': 'application/json',\n  'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n} \nexport default {\n  name: \"messages\",\n  data() {\n    return {\n      messagesData: [],\n      rowSize: 20, //Number of rows\n      pagesSize: 1, //Number of pages\n      page: 1, //current active page\n      menu: false,\n      rowSizesValue: [5, 10, 20],\n      sortType: \"desc\",\n      dateSort: true,\n      sortByValue: \"createdAt\",\n      textNoti: \"\",\n      errorOccured: false,\n      showNoti: false\n    };\n  },\n  mounted: function() {\n    if(localStorage.getItem(THEME)==\"light\"){\ndocument.getElementById(\"header\").style.backgroundColor=\"white\";\ndocument.getElementById(\"messages\").style.backgroundColor=\"white\";\n}else if(localStorage.getItem(THEME)==\"dark\") {\ndocument.getElementById(\"header\").style.backgroundColor=\"black\";\ndocument.getElementById(\"messages\").style.backgroundColor=\"black\";\n}\n    //onload funkcija\n    this.create();\n  },\n  filters: {\n    shortDate(value) {\n      let dateVar = new Date(value);\n      let dataVar2 = dateVar.toDateString();\n      let data = dataVar2.substring(4);\n      return data;\n    }\n  },\n  methods: {\n    async reloadMessages() {\n      var pg = this.page - 1;\n      try \n      {\n        const res = await axios.get(API_BASE_URL+\"/api/messages?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=\" + this.sortByValue + \",\" + this.sortType);\n\n        if (res.data.totalPages < this.page)\n          this.changePage(res.data.totalPages);\n\n        this.messagesData = res.data.content;\n        this.pagesSize = res.data.totalPages;\n      } \n      catch (err) \n      {\n        this.showNotification(-1);\n      }\n    },\n\n    showNotification(value) {\n       if(value == -1)\n       {\n           this.textNoti = \"Some error have occured\";\n           this.errorOccured = true;\n       }\n       else\n       {\n          this.errorOccured = false;\n          this.textNoti = \"Succes\"; \n       }\n       this.showNoti = !this.showNoti;\n       setTimeout(this.closeNoti, 1500)\n       {}\n    },\n\n    closeNoti(){\n        this.showNoti = false;\n    },\n\n    showMessageForm() {\n      this.$router.push(\"/dashboard/messages/newMessage\");\n    },\n\n    showTriggerForm(id) {\n      this.$router.push(\"/dashboard/messages/newTrigger/\" + id);\n    },\n\n    showScheduleForm(id) {\n      this.$router.push(\"/dashboard/messages/newSchedule/\" + id);\n    },\n\n    async editMessage(id) {\n      this.$router.push(\"/dashboard/messages/updateMessage/\" + id);\n    },\n\n    async deleteMessage(id) {\n      await axios.delete(API_BASE_URL+\"/api/messages/\" + id);\n      var pg = this.page - 1;\n      try \n      {\n        var res;\n        if(this.titleSort == true)\n          res = await axios.get(API_BASE_URL+\"/api/messages?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=title,\" + this.sortType);\n        else if(this.textSort == true)\n          res = await axios.get(API_BASE_URL+\"/api/messages?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=text,\" + this.sortType);\n        else\n          res = await axios.get(API_BASE_URL+\"/api/messages?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=createdAt,\" + this.sortType);\n        \n        if (res.data.numberOfElements == 0) \n        {\n          if (this.page != 1) \n            this.changePage(this.page - 1);\n        }\n        this.messagesData = res.data.content;\n        if (res.data.totalPages == 0) \n            this.pagesSize = 1;\n        else \n            this.pagesSize = res.data.totalPages;\n        this.showNotification(200);\n      } \n      catch (err) \n      {\n        this.showNotification(-1);\n      }\n    },\n\n    toggleMenu() {\n      this.menu = !this.menu;\n    },\n\n    hideMenu() {\n      this.menu = false;\n    },\n\n    setRows(value) {\n      if (value != this.rowSize) {\n        this.rowSize = value;\n        this.reloadMessages();\n      }\n      this.menu = !this.menu;\n    },\n\n    changePage(nextPage) {\n      this.page = nextPage;\n      this.reloadMessages(nextPage - 1);\n    },\n\n    async create() {\n      try \n      {\n        const res = await axios.get(API_BASE_URL+\"/api/messages?page=0&size=\" + this.rowSize + \"&sort=createdAt,\" + this.sortType);\n        this.messagesData = res.data.content;\n        if (res.data.totalPages == 0) \n            this.pagesSize = 1;\n        else \n            this.pagesSize = res.data.totalPages;\n        this.rowSize = res.data.size;\n      }\n      catch (err) {\n        //alert(err);\n         console.log(err);\n      }\n    },\n    \n\n    sortBy(value) {\n      if (this.sortType == \"desc\") \n        this.sortType = \"asc\";\n      else \n        this.sortType = \"desc\";\n      \n      this.sortByValue = value;\n      this.reloadMessages();\n    }\n    },\n\n  directives: {\n    ClickOutside\n  }\n}\n",{"version":3,"sources":["Messages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Messages.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"messages\">\n    <router-view @reload-messages=\"reloadMessages()\" @show-notification=\"showNotification($event)\"></router-view>\n<div id=\"header\">\n        <h1>Messages</h1>\n        \n      </div>\n      <div id=\"divlist\">\n    <ul id=\"list\">\n      <li id=\"title-li\">\n        <div class=\"column1 column\">\n          <h5>Title</h5>\n          <p>\n            <i class=\"material-icons\" @click=\"sortBy('title')\">arrow_drop_down</i>\n          </p>\n        </div>\n        <div class=\"column2 column\">\n          <h5>Text</h5>\n          <p>\n            <i class=\"material-icons\" @click=\"sortBy('text')\">arrow_drop_down</i>\n          </p>\n        </div>\n        <div class=\"column3 column\">\n          <h5>Created At</h5>\n          <p>\n            <i class=\"tooltip, material-icons\" @click=\"sortBy('createdAt')\">arrow_drop_down</i>\n          </p>\n        </div>\n        <div class=\"column4 column\">\n          <p>\n            <i class=\"material-icons\">filter_list</i>\n          </p>\n        </div>\n      </li>\n\n      <li v-for=\"message in messagesData\" :key=\"message.messageId\">\n        <div class=\"linear2\"></div>\n        <div class=\"linear1\"></div>\n        <div class=\"column1 column\">\n          <p>{{message.title}}</p>\n        </div>\n        <div class=\"column2 column\">\n          <p>{{message.text}}</p>\n        </div>\n        <div class=\"column3 column\">\n          <p>{{message.createdAt | shortDate }}</p>\n        </div>\n        <div class=\"column4 column\">\n          <i class=\"material-icons tooltip\" @click=\"showScheduleForm(message.messageId)\" data-tooltip=\"Neki tekst\">assignment_turned_in</i>\n          <i class=\"material-icons\" @click=\"showTriggerForm(message.messageId)\">assistant</i>\n          <i class=\"material-icons\" @click=\"editMessage(message.messageId)\">create</i>\n          <i class=\"material-icons\" @click=\"deleteMessage(message.messageId)\">delete</i>\n        </div>\n      </li>\n      \n    </ul>\n</div>\n    <div id=\"footer\">\n      <button id=\"footer-btn\" @click=\"toggleMenu\" v-click-outside=\"hideMenu\">{{ this.rowSize }} Rows</button>\n      <div id=\"menu\" v-show=\"menu\">\n        <div class=\"menu-article\" v-for=\"rowValue in rowSizesValue\" :key=\"rowValue\" @click=\"setRows(rowValue)\">{{ rowValue }}</div>\n      </div>\n\n      <div class=\"text-xs-center\">\n        <v-pagination v-model=\"page\" :length=\"pagesSize\" :total-visible=\"5\" @input=\"changePage\"></v-pagination>\n      </div>\n    </div>\n\n    <button @click=\"showMessageForm\" id=\"btn\">+</button>\n\n    <div id=\"notification\" v-show=\"showNoti\" :class=\"{redBorder: errorOccured, greenBorder: !errorOccured}\">\n      <input type=\"text\" v-model=\"textNoti\" readonly :class=\"{redText: errorOccured, greenText: !errorOccured}\" />\n      <button @click=\"showNotification\" :class=\"{redBackground: errorOccured, greenBackground: !errorOccured}\">OK</button>\n    </div>\n  </div>\n</template>\n\n\n<script>\n/* eslint-disable */\nimport { THEME_ID, THEME, API_BASE_URL} from \"../constants/index.js\";\nimport {USER_EMAIL} from \"../constants/index.js\";\nimport {ACCESS_TOKEN} from \"../constants/index.js\";\nimport axios from \"axios\";\nimport ClickOutside from \"vue-click-outside\";\nimport { setTimeout } from 'timers';\nconst headers = {\n  'Content-Type': 'application/json',\n  'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n} \nexport default {\n  name: \"messages\",\n  data() {\n    return {\n      messagesData: [],\n      rowSize: 20, //Number of rows\n      pagesSize: 1, //Number of pages\n      page: 1, //current active page\n      menu: false,\n      rowSizesValue: [5, 10, 20],\n      sortType: \"desc\",\n      dateSort: true,\n      sortByValue: \"createdAt\",\n      textNoti: \"\",\n      errorOccured: false,\n      showNoti: false\n    };\n  },\n  mounted: function() {\n    if(localStorage.getItem(THEME)==\"light\"){\ndocument.getElementById(\"header\").style.backgroundColor=\"white\";\ndocument.getElementById(\"messages\").style.backgroundColor=\"white\";\n}else if(localStorage.getItem(THEME)==\"dark\") {\ndocument.getElementById(\"header\").style.backgroundColor=\"black\";\ndocument.getElementById(\"messages\").style.backgroundColor=\"black\";\n}\n    //onload funkcija\n    this.create();\n  },\n  filters: {\n    shortDate(value) {\n      let dateVar = new Date(value);\n      let dataVar2 = dateVar.toDateString();\n      let data = dataVar2.substring(4);\n      return data;\n    }\n  },\n  methods: {\n    async reloadMessages() {\n      var pg = this.page - 1;\n      try \n      {\n        const res = await axios.get(API_BASE_URL+\"/api/messages?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=\" + this.sortByValue + \",\" + this.sortType);\n\n        if (res.data.totalPages < this.page)\n          this.changePage(res.data.totalPages);\n\n        this.messagesData = res.data.content;\n        this.pagesSize = res.data.totalPages;\n      } \n      catch (err) \n      {\n        this.showNotification(-1);\n      }\n    },\n\n    showNotification(value) {\n       if(value == -1)\n       {\n           this.textNoti = \"Some error have occured\";\n           this.errorOccured = true;\n       }\n       else\n       {\n          this.errorOccured = false;\n          this.textNoti = \"Succes\"; \n       }\n       this.showNoti = !this.showNoti;\n       setTimeout(this.closeNoti, 1500)\n       {}\n    },\n\n    closeNoti(){\n        this.showNoti = false;\n    },\n\n    showMessageForm() {\n      this.$router.push(\"/dashboard/messages/newMessage\");\n    },\n\n    showTriggerForm(id) {\n      this.$router.push(\"/dashboard/messages/newTrigger/\" + id);\n    },\n\n    showScheduleForm(id) {\n      this.$router.push(\"/dashboard/messages/newSchedule/\" + id);\n    },\n\n    async editMessage(id) {\n      this.$router.push(\"/dashboard/messages/updateMessage/\" + id);\n    },\n\n    async deleteMessage(id) {\n      await axios.delete(API_BASE_URL+\"/api/messages/\" + id);\n      var pg = this.page - 1;\n      try \n      {\n        var res;\n        if(this.titleSort == true)\n          res = await axios.get(API_BASE_URL+\"/api/messages?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=title,\" + this.sortType);\n        else if(this.textSort == true)\n          res = await axios.get(API_BASE_URL+\"/api/messages?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=text,\" + this.sortType);\n        else\n          res = await axios.get(API_BASE_URL+\"/api/messages?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=createdAt,\" + this.sortType);\n        \n        if (res.data.numberOfElements == 0) \n        {\n          if (this.page != 1) \n            this.changePage(this.page - 1);\n        }\n        this.messagesData = res.data.content;\n        if (res.data.totalPages == 0) \n            this.pagesSize = 1;\n        else \n            this.pagesSize = res.data.totalPages;\n        this.showNotification(200);\n      } \n      catch (err) \n      {\n        this.showNotification(-1);\n      }\n    },\n\n    toggleMenu() {\n      this.menu = !this.menu;\n    },\n\n    hideMenu() {\n      this.menu = false;\n    },\n\n    setRows(value) {\n      if (value != this.rowSize) {\n        this.rowSize = value;\n        this.reloadMessages();\n      }\n      this.menu = !this.menu;\n    },\n\n    changePage(nextPage) {\n      this.page = nextPage;\n      this.reloadMessages(nextPage - 1);\n    },\n\n    async create() {\n      try \n      {\n        const res = await axios.get(API_BASE_URL+\"/api/messages?page=0&size=\" + this.rowSize + \"&sort=createdAt,\" + this.sortType);\n        this.messagesData = res.data.content;\n        if (res.data.totalPages == 0) \n            this.pagesSize = 1;\n        else \n            this.pagesSize = res.data.totalPages;\n        this.rowSize = res.data.size;\n      }\n      catch (err) {\n        //alert(err);\n         console.log(err);\n      }\n    },\n    \n\n    sortBy(value) {\n      if (this.sortType == \"desc\") \n        this.sortType = \"asc\";\n      else \n        this.sortType = \"desc\";\n      \n      this.sortByValue = value;\n      this.reloadMessages();\n    }\n    },\n\n  directives: {\n    ClickOutside\n  }\n}\n</script>\n\n<style>\nh1 {\n  margin-top: 0px;\n  margin-left: 20px;\n  width: 200px;\n  float: left;\n}\n#header {\n  margin-left: 15px;\n  margin-right: 10px;\n  display: block;\n  width: 99%;\n  float: right;\n  background-color: white;\n  height: 72px;\n}\n#divlist {\n  padding-left: 10px;\n  padding-right: 10px;\n  width: 100%;\n  height: 100vh;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n}\n\n*:focus {\n  outline: none;\n}\n\n#menu {\n  width: 105px;\n  position: absolute;\n  float: left;\n  bottom: 69%;\n}\n\n.text-xs-center {\n  width: 400px;\n  float: right;\n  position: relative;\n  right: 50%;\n  transform: translateX(50%);\n}\n\n.menu-article {\n  border: 1px solid white;\n  width: 100%;\n  display: flex;\n  background-color: rgb(192, 188, 188);\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  z-index: 99;\n  padding: 10px 0px;\n}\n\n.menu-article:hover {\n  cursor: pointer;\n  background-color: lightgray;\n}\n\n#messages {\n  padding: 20px;\n  padding-bottom: 0px;\n  height: 100vh;\n}\n\n#list {\n  height: 95%;\n  overflow: auto;\n}\n\nhtml,\nbody {\n  height: 100%;\n  overflow: hidden;\n}\n\n#btn {\n  position: absolute;\n  bottom: 100px;\n  right: 50px;\n}\n\nul {\n  width: 100%;\n  height: 100%;\n  padding: 0px;\n}\n\n#title-li {\n  border-radius: 3px 3px 0px 0px;\n  background-color: #f1f1f1;\n}\n\n#title-li .column {\n  overflow: unset;\n}\n\n#title-li .material-icons {\n  display: block;\n}\n\nli {\n  display: flex;\n  height: 48px;\n  width: 100%;\n  background-color: white;\n  border: 0.5px solid lightgray;\n  border-bottom: 0px;\n  overflow: hidden;\n}\n\nli:last-child {\n  border-bottom: 0.5px solid lightgray;\n}\n\nli p {\n  font-size: 13px;\n}\n\n.column {\n  margin-left: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  overflow: hidden;\n  white-space: nowrap;\n  font-size: 14px;\n  font-weight: 300;\n}\n\n#title-li .column h5 {\n  font-size: 14px;\n}\n\n#title-li .column {\n  margin-left: 20px;\n  color: black;\n}\n\n#title-li .column4{\n  padding-right: 20px;\n}\n\nli p {\n  margin: 0px;\n  color: rgb(70, 67, 67);\n}\n\n.column1 {\n  width: 13%;\n}\n\n.column2 {\n  width: 35%;\n}\n\n.column3 {\n  width: 7%;\n  margin-left: 30px;\n}\n\n.column4 {\n  width: 45%;\n}\n\n.column4 p {\n  margin-left: 20px;\n}\n\n.column4 {\n  justify-content: flex-end;\n  padding-right: 55px;\n}\n\nli:hover {\n  background-color: #f1f1f1;\n}\n\nli:hover .linear1 {\n  background-image: linear-gradient(\n    90deg,\n    rgba(236, 236, 236, 0) 0%,\n    rgb(241, 238, 238) 100%\n  );\n}\n\nli:hover .linear2 {\n  background-image: linear-gradient(\n    90deg,\n    rgba(236, 236, 236, 0) 0%,\n    rgb(241, 238, 238) 100%\n  );\n}\n\n.linear1 {\n  background-image: linear-gradient(\n    90deg,\n    rgba(236, 236, 236, 0) 0%,\n    white 100%\n  );\n  width: 60px;\n  height: 40px;\n  margin-top: 5px;\n  position: absolute;\n  left: 17%;\n}\n\n.linear2 {\n  background-image: linear-gradient(\n    90deg,\n    rgba(236, 236, 236, 0) 0%,\n    white 100%\n  );\n  width: 60px;\n  height: 39px;\n  margin-top: 5px;\n  z-index: 5;\n  position: absolute;\n  left: 48%;\n}\n\n#btn {\n  float: right;\n  height: 60px;\n  width: 60px;\n  border-radius: 50%;\n  font-size: 30px;\n  position: absolute;\n  bottom: 50px;\n  right: 13px;\n  background-color: #006bf5;\n  color: white;\n  border: 1px solid white;\n  font-family: \"Courier New\", Courier, monospace;\n  line-height: 60px;\n  z-index: 95;\n}\n\n#btn:hover {\n  cursor: pointer;\n}\n\n#footer {\n  height: 7%;\n  position: relative;\n  bottom: 2%;\n  background-color: white;\n  z-index: 0;\n  border: 1px solid lightgray;\n  padding: 0px 20px;\n}\n\n#footer-btn {\n  border: 1px solid grey;\n  padding: 5px 5px;\n  width: 105px;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  border-radius: 4px;\n}\n\n#footer ul li {\n  display: block;\n  border: 0px;\n}\n\n#footer ul li:hover {\n  background-color: white;\n}\n\n#footer ul li button {\n  height: 100%;\n}\n\n#footer li .material-icons {\n  /* for right and left nav icons */\n  display: block;\n}\n\n.theme--light.v-pagination .v-pagination__item--active {\n  /* for active page */\n  color: lightgray;\n}\n.text-xs-center {\n  height: 100%;\n}\n\n.v-pagination__item {\n  -webkit-box-shadow: none;\n  box-shadow: none;\n}\n\n.v-pagination__navigation {\n  -webkit-box-shadow: none;\n  box-shadow: none;\n}\n\n.greenBorder{\n    border: 1px solid rgb(85, 235, 85);\n}\n\n.redBorder{\n    border: 1px solid rgb(248, 74, 74);\n}\n\n.redText{\n    color: rgb(248, 74, 74);\n}\n\n.greenText{\n    color: rgb(85, 235, 85);\n}\n\n.redBackground{\n  background-color: rgb(248, 74, 74);\n}\n\n.redBackground:hover{\n  background-color: rgb(241, 101, 101);\n}\n\n.greenBackground{\n  background-color: rgb(85, 235, 85);\n}\n\n.greenBackground:hover{\n  background-color: rgb(140, 231, 140);\n}\n\n#notification {\n  height: 10vh;\n  width: 400px;\n  position: absolute;\n  right: 100px;\n  bottom: 10px;\n  background-color: white;\n  border-radius: 10px;\n}\n\n#notification input{\n  height: 60%;\n  width: 100%;\n  text-align: center;\n  font-size: 25px;\n}\n\n#notification button{\n  width: 100%;\n  height: 40%;\n  text-align: center;\n  font-size: 20px;\n  color: white;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n/*\n.tooltip{\n  position: relative;\n}\n\n.tooltip::before, .tooltip::after{\n  position: absolute;\n  left: 20%;\n  opacity: 0;\n  transition: all ease 0.3s;\n}\n\n.tooltip::before{\n  content: \"\";\n  border-width: 10px 8px 0px 8px;\n  border-style: solid;\n  border-color: rgba(0, 0, 0, 0.3) transparent;\n  top: -10px;\n}\n\n.tooltip::after{\n  content: attr(data-tooltip);\n  background: rgba(0, 0, 0, 0.3);\n  top: -10px;\n  width: 155px;\n  font-size: 16px;\n  margin-left: -100px;\n  padding: 14px;\n  border-radius: 10px;\n  color: #eee;\n  transform: translateY(-100%);\n  color: white;\n  text-align: center;\n}\n\n.tooltip:hover::before, .tooltip:hover::after{\n  opacity: 1;\n}\n*/\n</style>\n"]}]}