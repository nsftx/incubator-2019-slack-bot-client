{"remainingRequest":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/FormSchedule.vue?vue&type=style&index=0&id=c0e143aa&scoped=true&lang=css&","dependencies":[{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/FormSchedule.vue","mtime":1565690950783},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*{\n    font-family: 'Roboto', sans-serif;\n}\n\n*[data-v-f2ae3234] {\n    width: 100%;\n    height:13px;\n    font-family: 'Roboto', sans-serif;\n}\n#check{\n    margin-top:15px;\n}\n\n#check,#active{\n    width:10%;\n}\n\n#cancel,#submit{\n    width:30%;\n    height:auto;\n}\n\n.mx-input{\n    overflow: visible;\n}\n\n.mx-input-append{\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 30px;\n    margin-right: 10px;\n}\n\n#formaS{\n    width: 640px;\n    height: 480px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    z-index: 99;\n}\n\n.form-style-10{\n    width: 100%;\n    height: 100%;\n\tpadding:20px;\n\tposition:absolute;\n\ttop:50%;\n\tleft:50%;\n\ttransform:translateX(-50%) translateY(-50%);\n\tbackground: #FFF;\n    box-sizing:border-box;\n    display:block;\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    z-index: 99;\n}\n\n.form-style-10 .inner-wrap{\n    display:block;\n\tpadding: 20px;\n\tbackground: #fff;\n\tborder-radius: 6px;\n\tmargin-bottom: 15px;\n    margin-top: 20px;\n}\n\n.form-style-10 label{\n\tfont: 13px Arial, Helvetica, sans-serif;\n\tcolor: #888;\n\tmargin-bottom: 10px;\n}\n\n.form-style-10 select{\n    color:#222222;\n    font: 13px Arial, Helvetica, sans-serif;\n    font-weight: 400;\n}\n\n.form-style-10 input[type=\"text\"],\n.form-style-10 select,\n.form-style-10 input[type=\"datetime\"],\n.form-style-10 input[type=\"email\"],\n.form-style-10 input[type=\"number\"],\n.form-style-10 input[type=\"search\"],\n.form-style-10 input[type=\"time\"],\n.form-style-10 input[type=\"url\"],\n.form-style-10 input[type=\"password\"],\n.form-style-10 textarea,\n.form-style-10 select {\n    overflow:none;\n    margin-bottom: 20px;\n\tdisplay: block;\n\tbox-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\t-moz-box-sizing: border-box;\n    width: 100%;\n    height:40%;\n\tpadding: 8px;\n\tborder-radius: 6px;\n\t-webkit-border-radius:6px;\n\t-moz-border-radius:6px;\n}\n\n.form-style-10 .section{\n\tfont: normal 25px 'Bitter', serif;\n    padding-left: 20px;\n\tpadding-bottom: 5px;\n}\n\n.form-style-10 .section p{\n    height:20%;\n    width:100%;\n    font-weight: bold;\n    color:black;\n    margin-top: 18px;\n}\n\n.form-style-10 #submit{\n    float:right;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n    width:20%;\n    overflow: hidden;\n    background: #0080ff;\n\tpadding: 8px 20px 8px 20px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor: #fff;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\tborder: 1px solid #0080ff;;\n\tfont-size: 17px;\n}\n\n.form-style-10 #submit:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 input[type=\"button\"]{\n    margin-right:15px;\n    float:right;\n    padding: 8px 8px 8px 8px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor:#4D4D4D;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tborder: 1px solid #257C9E;\n\tfont-size: 17px;\n    border:none;\n    background:#fff;\n    text-align:center;\n    margin-right: 25px;\n}\n\n.form-style-10 input[type=\"submit\"]:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 .privacy-policy{\n\tfloat: right;\n\twidth: 250px;\n\tfont: 12px Arial, Helvetica, sans-serif;\n\tcolor: #4D4D4D;\n\tmargin-top: 10px;\n\ttext-align: right;\n}\n\n#textarea{\n    display:block;\n    overflow:none;\n    height:100%;\n    width:100%;\n    margin-bottom: 20px;\n}\n\n#close-icon{\n    font-size: 25px;\n    display:inline;\n    text-align:right;\n    position: relative;\n    left: 60%;\n}\n\n#close-icon:hover{\n    cursor: pointer;\n}\n\n#active{\n    margin-bottom: 50px;\n}\n\n#field1, #field2, #field3{\n    margin-bottom: 10px;\n    height: 37px;\n    margin-top: 10px;\n    font-size: 15px;\n}\n\n.checkBox{\n    position: relative;\n    top: 10px;\n    right: 15px;\n}\n\n.bottomOption{\n    position: relative;\n    bottom: 45px;\n}\n\n.errorBorder {\n    border: 1px inset rgb(253, 38, 38);\n}\n\n.noErrorBorder{\n    border: 1px inset rgba(0, 0, 0, 0.2);\n}\n\nspan {\n  color: rgb(253, 38, 38);\n  font-weight: 400;\n}\n\n.checkBox:hover{\n    cursor: pointer;\n}\n\n.la{\n    display: inline;\n    background-color: white;\n    position: relative;\n    top: 15px;\n    left: 10px;\n    z-index: 99;\n    padding: 0px 5px;\n}\n\n",{"version":3,"sources":["FormSchedule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"FormSchedule.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n<div id=\"formaS\">\n\n    <div class=\"form-style-10\">\n<form id=\"forma\">\n    <div class=\"section\">  <p id=\"section-text\">{{ formType }} Schedule <label id=\"close-icon\" @click=\"exit\">x </label> </p></div>\n    <div class=\"inner-wrap\">\n        \n        <label class=\"la\">Message</label>\n        \n        <select name=\"field1\" id=\"field1\" v-model=\"messageTitle\" @click=\"getMessageID\" :class=\"{errorBorder: showTitleError, noErrorBorder: !showTitleError}\"> \n            <option disabled selected>{{ messageTitle }}</option>\n            <option v-for=\"message in messagesData\" :key=\"message.messageId\" v-show=\"showMessageOption\"> {{ message.title }} </option>\n        </select>\n\n        <span v-show=\"showTitleError\">Message title is required</span>\n        <br>\n\n        <label class=\"la\"> Run At </label>  <br> \n        <div class=\"input-append date form_datetime\">\n            <div>\n           <date-picker v-model=\"date\" :lang=\"lang\" style=\"margin-top: 8px\"></date-picker>\n            </div>\n        </div>\n        <br>\n        <br>\n        <span v-show=\"showDateError\">Date is required and must not be less then today date</span>\n        <br>\n\n        <label class=\"la\"> Channel name </label> \n        <select id=\"field3\" v-model=\"channelName\" :class=\"{errorBorder: showChannelError, noErrorBorder: !showChannelError}\"> \n            <option disabled selected >Some channel name</option>\n            <option v-for=\"channel in channelsData\" :key=\"channel.name\"> {{ channel.name }} </option>\n        </select>\n\n        <span v-show=\"showChannelError\"> Channel name is required </span>\n\n        <br>\n        <input type=\"checkbox\" id=\"check\" class=\"checkBox\" v-model=\"repeat\"/> <label class=\"check-label checkBox\" for=\"check\"> Repeat </label> \n        <br> \n        <br>\n        <input type=\"checkbox\" id=\"active\" class=\"checkBox\" v-model=\"active\"/> <label class=\"check-label checkBox\" for=\"active\"> Active </label> \n        <br>\n        <input type=\"button\" class=\"bottomOption\" value=\"Save\" id=\"submit\" @click=\"save\"/>\n        <input type=\"button\" class=\"bottomOption\" id=\"cancel\" value=\"Cancel\" @click=\"exit\"/>\n</div>\n\n</form>\n</div>\n    \n</div>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport DatePicker from 'vue2-datepicker'\nimport { API_BASE_URL } from '../constants';\n\n\n/*\nwindow.addEventListener(\"mouseup\", function(event){\n\tif(event.target != document.getElementById(\"formaS\") && event.target.parentNode != document.getElementById(\"formaS\") && \n\tevent.target.parentNode !=  document.getElementById(\"forma\") && event.target.parentNode != document.getElementById(\"inner-wrap\")\n    && event.target != document.getElementById(\"section\") && event.target.parentNode != document.getElementById(\"section\")\n    && event.target != document.getElementById(\"field1\") && event.target != document.getElementById(\"field2\") \n    && event.target != document.getElementsByClassName(\"la\")[0] && event.target != document.getElementsByClassName(\"la\")[1]\n    && event.target != document.getElementById(\"check\") && event.target != document.getElementById(\"active\")\n    && event.target != document.getElementById(\"section-text\")\n    && event.target != document.getElementsByClassName(\"check-label\")[0] && event.target != document.getElementsByClassName(\"check-label\")[1])\n\t{\n\t\tdocument.getElementById(\"formaS\").style.display = \"none\";\n\t\tdocument.getElementById(\"field1\").value = \"\";\n\t\tdocument.getElementById(\"textarea\").value = \"\";\n\t}\n})*/\n\nexport default {\n    name: \"formaS\",\n    components:{DatePicker},\n     data (){  \n        return {\n            messagesData: [],\n            channelsData: [],\n            messageTitle: \"Some message title\",\n            channelName: \"Some channel name\",\n            targetMess: \"\",\n            messId: \"\",\n            showTitleError: false,\n            showDateError: false,\n            showChannelError: false,\n            repeat: false,\n            active: false,\n            date: null,\n            formType: \"Create\",\n            showMessageOption: true,\n\n            time1: '',\n            time2: '',\n            time3: '',\n            // custom lang\n            lang: {\n                days: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n                months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                pickers: ['next 7 days', 'next 30 days', 'previous 7 days', 'previous 30 days'],\n                placeholder: {\n                date: 'Select Date',\n                dateRange: 'Select Date Range'\n            }\n        }\n        }\n    },\n\n    mounted: async function(){\n        if(this.$route.params.id == null)\n        {\n            try \n            {\n                const res = await axios.get(API_BASE_URL+\"/api/messages\");\n                    this.messagesData = res.data.content;             \n            }\n            catch (err) {\n                this.$emit(\"show-notification\", -1);\n            }\n        }\n        else\n        {\n            var currentR = this.$router.currentRoute.fullPath;\n            var path = currentR.substring(0, 31);\n\n            if(path == \"/dashboard/messages/newSchedule\")\n            {\n                try\n                {\n                    const res = await axios.get(API_BASE_URL+\"/api/messages/\" + this.$route.params.id);\n                    this.messagesData = res.data;\n                    this.messageTitle = this.messagesData.title;\n                    this.showMessageOption = false;\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);\n                }   \n            }\n            else\n            {\n                this.formType = \"Update\";\n                var res;\n                try\n                {\n                    res = await axios.get(API_BASE_URL+\"/api/schedules/\" + this.$route.params.id);\n                    this.active = res.data.active;\n                    this.repeat = res.data.repeat;\n                    this.channelName = res.data.channel;\n                    this.messageTitle = res.data.message.title;\n                    this.date = res.data.runAt;\n                    this.messId = res.data.message.messageId;\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);               \n                }\n                try\n                {\n                    const resM = await axios.get(API_BASE_URL+\"/api/messages\");\n                    this.messagesData = resM.data.content;\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);               \n                }\n            }\n        }\n        try\n        {\n            //Aplikacija nije povezana sa listom kanala\n            const res = await axios.get(API_BASE_URL+\"/api/channels\");\n            this.channelsData = [{name: \"#general\"}, {name: \"#incubator\"}];\n        }\n        catch(err)\n        {\n            this.$emit(\"show-notification\", -1);\n        }\n    },\n\n    watch: {\n        messageTitle(value) {\n          this.messageTitle = value;\n          if (this.liveValidation == true) this.check_messageTitle(value);\n        },\n\n        date(value){\n            this.date = value;\n            if(this.liveValidation == true) this.check_date(value);\n        },\n\n        channelName(value){\n            this.channelName = value;\n            if (this.liveValidation == true) this.check_channelName(value);\n        }\n    },\n\n    methods:{\n\t\texit(){\n\t\t\tthis.$router.go(-1);\n        },\n\n        check_messageTitle(value) \n        {\n            if (this.messageTitle == \"Some message title\") \n            {\n                this.showTitleError = true;\n                return false;\n            } \n            else\n            {\n                this.showTitleError = false;\n                return true;\n            }\n        },\n\n        check_channelName(value) {\n            if (this.channelName == \"Some channel name\") \n            {\n                this.showChannelError = true;\n                return false;\n            } \n            else {\n                this.showChannelError = false;\n                return true;\n            }\n        },\n\n        check_date(value){\n            if(this.date == null)\n            {\n                var inputi = document.getElementsByClassName(\"mx-input\")[0];\n                inputi.style.borderColor = \"red\";\n                this.showDateError = true;\n                return false;\n            }\n            var today = new Date();\n            if(today>this.date)\n            {\n                var inputi = document.getElementsByClassName(\"mx-input\")[0];\n                inputi.style.borderColor = \"rgba(0, 0, 0, 0.2);\";   \n                this.showDateError = true;\n                return false;\n            }\n            else\n            {\n                var inputi = document.getElementsByClassName(\"mx-input\")[0];\n                inputi.style.borderColor = \"rgba(0, 0, 0, 0.2);\"; \n                this.showDateError = false;\n                return true;\n            }\n        },\n\n\t\tasync save(){\n\n            this.liveValidation = true;\n            if (this.check_messageTitle(this.messageTitle) == false) this.invalid = true;\n            if (this.check_date(this.date) == false) this.invalid = true;\n            if (this.check_channelName(this.channelName) == false) this.invalid = true;\n            if (this.invalid == true) \n            {\n                this.invalid = false;\n                return;\n            }\n\n            if(this.$route.params.id != null)\n            {\n                var cr = this.$router.currentRoute.fullPath;\n                var path = cr.substring(0, 31);\n\n                if(path == \"/dashboard/messages/newSchedule\")\n                {\n                    try\n                    {\n                        await axios.post(API_BASE_URL+\"/api/schedules\", {active: this.active, channel: this.channelName, repeat: this.repeat, messageId: this.$route.params.id, runAt: this.date})\n                        this.$emit(\"show-notification\");\n                    }\n                    catch(err)\n                    {\n                        this.$emit(\"show-notification\", -1);\n                    }\n                }\n                else\n                {\n                    try\n                    {\n                        await axios.put(API_BASE_URL+\"/api/schedules/\" + this.$route.params.id, {active: this.active, channel: this.channelName, messageId:     this.messId, repeat: this.repeat, runAt: this.date});\n                        this.$emit(\"show-notification\");\n                    }\n                    catch(err)\n                    {\n                        this.$emit(\"show-notification\", -1);\n                    }\n                }\n            }\n            else\n            {\n                try\n                {\n                    await axios.post(API_BASE_URL+\"/api/schedules\", {active: this.active, channel: this.channelName, messageId: this.messId, repeat: this.repeat, runAt: this.date})\n                    this.$emit(\"show-notification\")\n                }\n                catch(err)\n                {\n                    this.$emit(\"show-notification\", -1);\n                }\n            }\n            this.$emit(\"reload-schedules\");\n            this.$router.go(-1);\n        },\n        getMessageID()\n        {   \n            if(this.messagesData.length > 1)\n            {\n                this.targetMess = this.messagesData.filter( mess => mess.title == this.messageTitle);\n                this.messId = this.targetMess[0].messageId;\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n*{\n    font-family: 'Roboto', sans-serif;\n}\n\n*[data-v-f2ae3234] {\n    width: 100%;\n    height:13px;\n    font-family: 'Roboto', sans-serif;\n}\n#check{\n    margin-top:15px;\n}\n\n#check,#active{\n    width:10%;\n}\n\n#cancel,#submit{\n    width:30%;\n    height:auto;\n}\n\n.mx-input{\n    overflow: visible;\n}\n\n.mx-input-append{\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 30px;\n    margin-right: 10px;\n}\n\n#formaS{\n    width: 640px;\n    height: 480px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    z-index: 99;\n}\n\n.form-style-10{\n    width: 100%;\n    height: 100%;\n\tpadding:20px;\n\tposition:absolute;\n\ttop:50%;\n\tleft:50%;\n\ttransform:translateX(-50%) translateY(-50%);\n\tbackground: #FFF;\n    box-sizing:border-box;\n    display:block;\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    z-index: 99;\n}\n\n.form-style-10 .inner-wrap{\n    display:block;\n\tpadding: 20px;\n\tbackground: #fff;\n\tborder-radius: 6px;\n\tmargin-bottom: 15px;\n    margin-top: 20px;\n}\n\n.form-style-10 label{\n\tfont: 13px Arial, Helvetica, sans-serif;\n\tcolor: #888;\n\tmargin-bottom: 10px;\n}\n\n.form-style-10 select{\n    color:#222222;\n    font: 13px Arial, Helvetica, sans-serif;\n    font-weight: 400;\n}\n\n.form-style-10 input[type=\"text\"],\n.form-style-10 select,\n.form-style-10 input[type=\"datetime\"],\n.form-style-10 input[type=\"email\"],\n.form-style-10 input[type=\"number\"],\n.form-style-10 input[type=\"search\"],\n.form-style-10 input[type=\"time\"],\n.form-style-10 input[type=\"url\"],\n.form-style-10 input[type=\"password\"],\n.form-style-10 textarea,\n.form-style-10 select {\n    overflow:none;\n    margin-bottom: 20px;\n\tdisplay: block;\n\tbox-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\t-moz-box-sizing: border-box;\n    width: 100%;\n    height:40%;\n\tpadding: 8px;\n\tborder-radius: 6px;\n\t-webkit-border-radius:6px;\n\t-moz-border-radius:6px;\n}\n\n.form-style-10 .section{\n\tfont: normal 25px 'Bitter', serif;\n    padding-left: 20px;\n\tpadding-bottom: 5px;\n}\n\n.form-style-10 .section p{\n    height:20%;\n    width:100%;\n    font-weight: bold;\n    color:black;\n    margin-top: 18px;\n}\n\n.form-style-10 #submit{\n    float:right;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n    width:20%;\n    overflow: hidden;\n    background: #0080ff;\n\tpadding: 8px 20px 8px 20px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor: #fff;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\tborder: 1px solid #0080ff;;\n\tfont-size: 17px;\n}\n\n.form-style-10 #submit:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 input[type=\"button\"]{\n    margin-right:15px;\n    float:right;\n    padding: 8px 8px 8px 8px;\n\tborder-radius: 5px;\n\t-webkit-border-radius: 5px;\n\t-moz-border-radius: 5px;\n\tcolor:#4D4D4D;\n\ttext-shadow: 1px 1px 3px rgba(0, 0, 0, 0.12);\n\tfont: normal 30px 'Bitter', serif;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.17);\n\tborder: 1px solid #257C9E;\n\tfont-size: 17px;\n    border:none;\n    background:#fff;\n    text-align:center;\n    margin-right: 25px;\n}\n\n.form-style-10 input[type=\"submit\"]:hover{\n    \n\tbackground:darkblue;\n\t-moz-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\t-webkit-box-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n\tbox-shadow: inset 0px 2px 2px 0px rgba(255, 255, 255, 0.28);\n}\n\n.form-style-10 .privacy-policy{\n\tfloat: right;\n\twidth: 250px;\n\tfont: 12px Arial, Helvetica, sans-serif;\n\tcolor: #4D4D4D;\n\tmargin-top: 10px;\n\ttext-align: right;\n}\n\n#textarea{\n    display:block;\n    overflow:none;\n    height:100%;\n    width:100%;\n    margin-bottom: 20px;\n}\n\n#close-icon{\n    font-size: 25px;\n    display:inline;\n    text-align:right;\n    position: relative;\n    left: 60%;\n}\n\n#close-icon:hover{\n    cursor: pointer;\n}\n\n#active{\n    margin-bottom: 50px;\n}\n\n#field1, #field2, #field3{\n    margin-bottom: 10px;\n    height: 37px;\n    margin-top: 10px;\n    font-size: 15px;\n}\n\n.checkBox{\n    position: relative;\n    top: 10px;\n    right: 15px;\n}\n\n.bottomOption{\n    position: relative;\n    bottom: 45px;\n}\n\n.errorBorder {\n    border: 1px inset rgb(253, 38, 38);\n}\n\n.noErrorBorder{\n    border: 1px inset rgba(0, 0, 0, 0.2);\n}\n\nspan {\n  color: rgb(253, 38, 38);\n  font-weight: 400;\n}\n\n.checkBox:hover{\n    cursor: pointer;\n}\n\n.la{\n    display: inline;\n    background-color: white;\n    position: relative;\n    top: 15px;\n    left: 10px;\n    z-index: 99;\n    padding: 0px 5px;\n}\n\n</style>"]}]}