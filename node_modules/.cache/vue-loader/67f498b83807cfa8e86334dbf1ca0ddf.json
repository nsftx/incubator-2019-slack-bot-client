{"remainingRequest":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/incubator-2019-slack-bot-client/src/components/poll.vue?vue&type=style&index=0&id=1a0e2f62&scoped=true&lang=css&","dependencies":[{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/src/components/poll.vue","mtime":1565789865073},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/css-loader/index.js","mtime":1565775065220},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1565775065856},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/postcss-loader/src/index.js","mtime":1565775065480},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/vuetify-loader/lib/loader.js","mtime":1565775065884},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":1565775065128},{"path":"/home/newsmay/Desktop/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js","mtime":1565775065856}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#poll {\n  padding: 20px;\n  height: 100%;\n  background-color: white;\n}\n\n#footer {\n  position: absolute;\n  bottom: -10px;\n  width: calc(93% - 20px);\n  margin-right: 20px;\n}\n",{"version":3,"sources":["poll.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"poll.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"poll\">\n    <h1>Poll</h1>\n\n    <div id=\"footer\">\n      <button id=\"footer-btn\" @click=\"toggleMenu\" v-click-outside=\"hideMenu\">{{ this.rowSize }} Rows</button>\n      <div id=\"menu\" v-show=\"menu\">\n        <div\n          class=\"menu-article\"\n          v-for=\"rowValue in rowSizesValue\"\n          :key=\"rowValue\"\n          @click=\"setRows(rowValue)\"\n        >{{ rowValue }}</div>\n      </div>\n\n      <div class=\"text-xs-center\">\n        <v-pagination v-model=\"page\" :length=\"pagesSize\" :total-visible=\"5\" @input=\"changePage\"></v-pagination>\n      </div>\n    </div>\n\n    <button @click=\"showPollForm\" id=\"btn\">+</button>\n\n    <div\n      id=\"notification\"\n      v-show=\"showNoti\"\n      :class=\"{redBorder: errorOccured, greenBorder: !errorOccured}\"\n    >\n      <input\n        type=\"text\"\n        v-model=\"textNoti\"\n        readonly\n        :class=\"{redText: errorOccured, greenText: !errorOccured}\"\n      />\n      <button\n        @click=\"showNotification\"\n        :class=\"{redBackground: errorOccured, greenBackground: !errorOccured}\"\n      >OK</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ClickOutside from \"vue-click-outside\";\n\nexport default {\n    name: \"poll\",\n    data(){\n        return{\n            pollData: [],\n            textNoti: \"\",\n            showNoti: false,\n            rowSizesValue: [5, 10, 20],\n            rowSize: 20,\n            page: 1, //current active page\n            pagesSize: 1, //Number of pages\n            menu: false,\n            sortByValue: \"createdAt\",\n            textNoti: \"\",\n            errorOccured: false,\n            showNoti: false\n        }\n    },\n    methods:{\n        showPollForm() {\n      this.$router.push(\"/dashboard/user/newUser\");\n    },\n\n    toggleMenu() {\n      this.menu = !this.menu;\n    },\n\n    hideMenu() {\n      this.menu = false;\n    },\n\n    setRows(value) {\n      if (value != this.rowSize) {\n        this.rowSize = value;\n        //this.reloadTriggers();\n      }\n      this.menu = !this.menu;\n    },\n\n    changePage(nextPage) {\n      this.page = nextPage;\n      //this.reloadTriggers(nextPage - 1);\n    },\n\n    async create() {\n      try {\n        const res = await axios.get(\n          API_BASE_URL + \"/api/triggers?page=0&size=\" + this.rowSize\n        );\n        this.triggersData = res.data.content;\n        if (res.data.totalPages == 0) this.pagesSize = 1;\n        else this.pagesSize = res.data.totalPages;\n        this.rowSize = res.data.size;\n      } catch (err) {\n        alert(err);\n      }\n    },\n\n     showNotification(value) {\n       if(value == -1)\n       {\n           this.textNoti = \"Some error have occured\";\n           this.errorOccured = true;\n       }\n       else\n       {\n          this.errorOccured = false;\n          this.textNoti = \"Succes\"; \n       }\n       this.showNoti = !this.showNoti;\n       setTimeout(this.closeNoti, 1500)\n       {}\n    },\n  },\n  directives: {\n    ClickOutside\n  }\n}\n</script>\n\n<style scoped>\n#poll {\n  padding: 20px;\n  height: 100%;\n  background-color: white;\n}\n\n#footer {\n  position: absolute;\n  bottom: -10px;\n  width: calc(93% - 20px);\n  margin-right: 20px;\n}\n</style>"]}]}