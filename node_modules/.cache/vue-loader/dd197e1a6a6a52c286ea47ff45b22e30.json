{"remainingRequest":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/Users.vue?vue&type=style&index=0&id=040e3608&scoped=true&lang=css&","dependencies":[{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/src/components/Users.vue","mtime":1565871906891},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newsmay/Desktop/test/incubator-2019-slack-bot-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh1 {\n  margin-top: 0px;\n  margin-left: 20px;\n  width: 200px;\n  float: left;\n}\n#header[data-v-040e3608] {\n  margin-top:10px;\n  margin-left: 15px;\n  margin-right: 10px;\n  display: block;\n  width: 99%;\n  float: right;\n  background-color: white;\n  height: 72px;\n}\n#divlist {\n  padding-left: 10px;\n  padding-right: 10px;\n  width: 100%;\n  height: 100vh;\n}\nbody {\n  font-family: \"Lato\", sans-serif;\nbackground:#EAEAEA;\n}\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<div id=\"user\">\n    <router-view @reload-users=\"reloadUsers()\" @show-notification=\"showNotification($event)\"></router-view>\n   \n <div id=\"header\">\n        <h1>Users</h1>\n      </div>\n       <div id=\"divlist\">\n    <ul id=\"list\">\n             <li id=\"title-li\">\n                 <div class=\"column1 column\"> <h5>Name</h5> <p> <i class=\"material-icons\">arrow_drop_down</i> </p> </div>\n                 <div class=\"column2 column\"> <h5>Email</h5> <p> <i class=\"material-icons\">arrow_drop_down</i> </p> </div>\n                 <div class=\"column3 column\"> <h5>Role</h5> <p> <i class=\"material-icons\">arrow_drop_down</i> </p> </div>\n             </li>\n\n        <li v-for=\"user in usersData\" :key=\"user.id\">\n            <div class='linear2'></div>\n            <div class='linear1'></div>\n            <div class='column1 column'>\n                <p> {{user.name}}</p> \n            </div> \n            <div class='column2 column'> \n                <p>{{user.email}}</p>\n            </div>\n            <div class='column3 column'> \n                <p>{{user.role}}</p>\n                 <div class=\"column4 column\">\n          <i class=\"material-icons\" @click=\"editUser(user.userId)\">create</i>\n          <i class=\"material-icons\" @click=\"deleteUser(user.userId)\">delete</i>\n        </div>\n            </div>\n        </li>\n\n    </ul>\n    </div>\n\n   <!-- <div id=\"footer\">\n        <button id=\"footer-btn\" @click=\"toggleMenu\" v-click-outside=\"hideMenu\"> {{ this.rowSize }} Rows </button>\n        <div id=\"menu\" v-show=\"menu\">\n            <div class=\"menu-article\" v-for=\"rowValue in rowSizesValue\" :key=\"rowValue\" @click=\"setRows(rowValue)\">{{ rowValue }}</div>\n        </div>\n\n        <div class=\"text-xs-center\">\n            <v-pagination\n                v-model=\"page\"\n                :length=\"pagesSize\"\n                :total-visible=\"5\"\n                @input=\"changePage\"\n            ></v-pagination>\n        </div>\n\n    </div>    -->\n\n    <button @click=\"showUserForm\" id=\"btn\"> + </button>\n</div>\n\n</template>\n\n<script>\nimport {API_BASE_URL} from  \"../constants/index.js\";\nimport {Current_User_Role, THEME_ID, THEME} from \"../constants/index.js\";\nimport {User_Email} from \"../constants/index.js\";\nimport {ACCESS_TOKEN} from \"../constants/index.js\";\nimport axios from \"axios\";\nimport ClickOutside from \"vue-click-outside\";\nconst headers = {\n  'Content-Type': 'application/json',\n  'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n} \nexport default {\n    name: \"user\",\n    data(){\n        return{\n            usersData:[],\n      rowSize: 20, //Number of rows\n      pagesSize: 1, //Number of pages\n      page: 1, //current active page\n      menu: false,\n      rowSizesValue: [5, 10, 20],\n      sortType: \"desc\",\n      dateSort: true,\n      sortByValue: \"createdAt\",\n            \n        }\n    },\n    \tmounted: function(){\n        if(localStorage.getItem(THEME)==\"light\"){\ndocument.getElementById(\"header\").style.backgroundColor=\"white\";\ndocument.getElementById(\"divlist\").style.backgroundColor=\"white\";\n}else if(localStorage.getItem(THEME)==\"dark\") {\ndocument.getElementById(\"header\").style.backgroundColor=\"black\";\ndocument.getElementById(\"divlist\").style.backgroundColor=\"black\";\n}\n    //onload funkcija\n    this.create();\n  }\n,\n    methods: {\n        async editUser(id) {\n      this.$router.push(\"/dashboard/messages/updateUser/\" + id);\n    },\n    async deleteUser(id) {\n      await axios.delete(API_BASE_URL+\"/user/delete/\" + id);\n      var pg = this.page - 1;\n      try \n      {\n        var res;\n        if(this.titleSort == true)\n          res = await axios.get(API_BASE_URL+\"/user/getAllUsers?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=title,\" + this.sortType);\n        else if(this.textSort == true)\n          res = await axios.get(API_BASE_URL+\"/user/getAllUsers?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=text,\" + this.sortType);\n        else\n          res = await axios.get(API_BASE_URL+\"/user/getAllUsers?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=createdAt,\" + this.sortType);\n        \n        if (res.data.numberOfElements == 0) \n        {\n          if (this.page != 1) \n            this.changePage(this.page - 1);\n        }\n        this.usersData = res.data.content;\n        if (res.data.totalPages == 0) \n            this.pagesSize = 1;\n        else \n            this.pagesSize = res.data.totalPages;\n        this.showNotification(200);\n      } \n      catch (err) \n      {\n        this.showNotification(-1);\n      }\n    },\n        async reloadUsers() {\n      var pg = this.page - 1;\n      try \n      {\n        const res = await axios.get(API_BASE_URL+\"/api/messages?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=\" + this.sortByValue + \",\" + this.sortType);\n\n        if (res.data.totalPages < this.page)\n          this.changePage(res.data.totalPages);\n\n        this.messagesData = res.data.content;\n        this.pagesSize = res.data.totalPages;\n      } \n      catch (err) \n      {\n        this.showNotification(-1);\n      }\n    },\n        showUserForm(){\n            this.$router.push(\"/dashboard/user/newUser\");\n        },\n        async reloadMessages() {\n      var pg = this.page - 1;\n      try \n      {\n        const res = await axios.get(API_BASE_URL+\"/user/getAllUsers?page=\" + pg + \"&size=\" + this.rowSize + \"&sort=\" + this.sortByValue + \",\" + this.sortType);\n\n        if (res.data.totalPages < this.page)\n          this.changePage(res.data.totalPages);\n\n        this.usersData = res.data.content;\n        this.pagesSize = res.data.totalPages;\n      } \n      catch (err) \n      {\n        this.showNotification(-1);\n      }\n    },\n    async create() {\n      try \n      {\n        const res = await axios.get(API_BASE_URL+\"/user/getAllUsers?page=0&size=\" + this.rowSize + \"&sort=name,\" + this.sortType);\n        this.usersData = res.data.content;\n        if (res.data.totalPages == 0) \n            this.pagesSize = 1;\n        else \n            this.pagesSize = res.data.totalPages;\n        this.rowSize = res.data.size;\n      }\n      catch (err) {\n        //alert(err);\n         console.log(err);\n      }\n    },\n    sortBy(value) {\n      if (this.sortType == \"desc\") \n        this.sortType = \"asc\";\n      else \n        this.sortType = \"desc\";\n      \n      this.sortByValue = value;\n      this.reloadMessages();\n    }\n    },\n    }\n\n</script>\n\n<style scoped>\nh1 {\n  margin-top: 0px;\n  margin-left: 20px;\n  width: 200px;\n  float: left;\n}\n#header[data-v-040e3608] {\n  margin-top:10px;\n  margin-left: 15px;\n  margin-right: 10px;\n  display: block;\n  width: 99%;\n  float: right;\n  background-color: white;\n  height: 72px;\n}\n#divlist {\n  padding-left: 10px;\n  padding-right: 10px;\n  width: 100%;\n  height: 100vh;\n}\nbody {\n  font-family: \"Lato\", sans-serif;\nbackground:#EAEAEA;\n}\n</style>"]}]}